{
  "abi": [
    {
      "inputs": [],
      "name": "InvalidInitialization",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInitializing",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "version",
          "type": "uint64"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[8]",
          "name": "claim",
          "type": "uint256[8]"
        }
      ],
      "name": "addClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[8]",
          "name": "claim",
          "type": "uint256[8]"
        }
      ],
      "name": "addClaimAndTransit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "hashIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "hashValue",
          "type": "uint256"
        }
      ],
      "name": "addClaimHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "hashIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "hashValue",
          "type": "uint256"
        }
      ],
      "name": "addClaimHashAndTransit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "schemaHash",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "idPosition",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "expirable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "updatable",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "merklizedRootPosition",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "version",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "revocationNonce",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "expirationDate",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "merklizedRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "indexDataSlotA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "indexDataSlotB",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "valueDataSlotA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "valueDataSlotB",
              "type": "uint256"
            }
          ],
          "internalType": "struct ClaimBuilder.ClaimData",
          "name": "claimData",
          "type": "tuple"
        }
      ],
      "name": "buildClaim",
      "outputs": [
        {
          "internalType": "uint256[8]",
          "name": "",
          "type": "uint256[8]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "calcIdentityState",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimIndexHash",
          "type": "uint256"
        }
      ],
      "name": "getClaimProof",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "existence",
              "type": "bool"
            },
            {
              "internalType": "uint256[]",
              "name": "siblings",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "auxExistence",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "auxIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auxValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct SmtLib.Proof",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimIndexHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "root",
          "type": "uint256"
        }
      ],
      "name": "getClaimProofByRoot",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "existence",
              "type": "bool"
            },
            {
              "internalType": "uint256[]",
              "name": "siblings",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "auxExistence",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "auxIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auxValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct SmtLib.Proof",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getClaimsTreeRoot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIsOldStateGenesis",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPublishedClaimsRoot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPublishedRevocationsRoot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPublishedRootsRoot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPublishedState",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "revocationNonce",
          "type": "uint64"
        }
      ],
      "name": "getRevocationProof",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "existence",
              "type": "bool"
            },
            {
              "internalType": "uint256[]",
              "name": "siblings",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "auxExistence",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "auxIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auxValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct SmtLib.Proof",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "revocationNonce",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "root",
          "type": "uint256"
        }
      ],
      "name": "getRevocationProofByRoot",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "existence",
              "type": "bool"
            },
            {
              "internalType": "uint256[]",
              "name": "siblings",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "auxExistence",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "auxIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auxValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct SmtLib.Proof",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        }
      ],
      "name": "getRevocationStatus",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "state",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "claimsTreeRoot",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "revocationTreeRoot",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rootOfRoots",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IOnchainCredentialStatusResolver.IdentityStateRoots",
              "name": "issuer",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "root",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "existence",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "siblings",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "auxExistence",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "auxIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "auxValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IOnchainCredentialStatusResolver.Proof",
              "name": "mtp",
              "type": "tuple"
            }
          ],
          "internalType": "struct IOnchainCredentialStatusResolver.CredentialStatus",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "state",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        }
      ],
      "name": "getRevocationStatusByIdAndState",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "state",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "claimsTreeRoot",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "revocationTreeRoot",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rootOfRoots",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IOnchainCredentialStatusResolver.IdentityStateRoots",
              "name": "issuer",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "root",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "existence",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "siblings",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "auxExistence",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "auxIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "auxValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IOnchainCredentialStatusResolver.Proof",
              "name": "mtp",
              "type": "tuple"
            }
          ],
          "internalType": "struct IOnchainCredentialStatusResolver.CredentialStatus",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRevocationsTreeRoot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimsTreeRoot",
          "type": "uint256"
        }
      ],
      "name": "getRootProof",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "existence",
              "type": "bool"
            },
            {
              "internalType": "uint256[]",
              "name": "siblings",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "auxExistence",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "auxIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auxValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct SmtLib.Proof",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimsTreeRoot",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "root",
          "type": "uint256"
        }
      ],
      "name": "getRootProofByRoot",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "existence",
              "type": "bool"
            },
            {
              "internalType": "uint256[]",
              "name": "siblings",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "auxExistence",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "auxIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auxValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct SmtLib.Proof",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "state",
          "type": "uint256"
        }
      ],
      "name": "getRootsByState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "claimsRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "revocationsRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rootsRoot",
              "type": "uint256"
            }
          ],
          "internalType": "struct IdentityLib.Roots",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRootsTreeRoot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSmtDepth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stateContractAddr",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newClaimData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "schemaHash",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "idPosition",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "expirable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "updatable",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "merklizedRootPosition",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "version",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "revocationNonce",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "expirationDate",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "merklizedRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "indexDataSlotA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "indexDataSlotB",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "valueDataSlotA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "valueDataSlotB",
              "type": "uint256"
            }
          ],
          "internalType": "struct ClaimBuilder.ClaimData",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "revocationNonce",
          "type": "uint64"
        }
      ],
      "name": "revokeClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "revocationNonce",
          "type": "uint64"
        }
      ],
      "name": "revokeClaimAndTransit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transitState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061194e806100206000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c8063715018a61161011a578063b8db6871116100ad578063da68a0b11161007c578063da68a0b114610426578063e26ecb0b1461042e578063f2a8ed5a14610441578063f2fde38b14610454578063f84c7c1e1461046757600080fd5b8063b8db6871146103c2578063c1e32733146103f7578063c4d66de81461040a578063c6365a3b1461041d57600080fd5b8063961fc416116100e9578063961fc416146103805780639674cfa414610393578063aad729211461039c578063b57a40cb146103af57600080fd5b8063715018a61461030b57806373c0824414610313578063891eb608146103335780638da5cb5b1461034657600080fd5b8063412363d3116101925780635aa7396b116101615780635aa7396b146102d25780635b9c895d146102e55780635d1ca631146102fa5780636c87e2fa1461030357600080fd5b8063412363d3146102995780634ddad0b3146102ae578063523b8136146102b65780635584b091146102bf57600080fd5b8063310d0d5b116101ce578063310d0d5b1461026e5780633d59ec60146102815780633df432fc1461028a5780633f0c66481461029257600080fd5b806301c85c7714610200578063110c96a71461021b578063264850631461023b5780632d5c4f251461025b575b600080fd5b61020861047e565b6040519081526020015b60405180910390f35b61022e6102293660046111f2565b6104fc565b60405161021291906112bf565b61024e610249366004611305565b61051b565b6040516102129190611320565b61024e610269366004611333565b6105b2565b61024e61027c366004611333565b610649565b6101f554610208565b610208610698565b6028610208565b6102ac6102a7366004611355565b6106d4565b005b6102086106f0565b61028e54610208565b6102ac6102cd366004611333565b61072c565b6102ac6102e0366004611355565b6107aa565b6102ed610820565b6040516102129190611380565b6101f454610208565b6102ac610835565b6102ac6108a3565b61032661032136600461146b565b6108b7565b6040516102129190611484565b6102ac610341366004611305565b610938565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b039091168152602001610212565b6102ac61038e366004611333565b610988565b61028f54610208565b61022e6103aa3660046114b6565b6109a6565b61024e6103bd3660046114eb565b610bb0565b6103d56103d03660046114eb565b610bf6565b6040805182518152602080840151908201529181015190820152606001610212565b61024e6104053660046114eb565b610c96565b6102ac610418366004611504565b610cde565b61029054610208565b610208610df4565b61024e61043c36600461152d565b610e30565b6102ac61044f366004611305565b610e87565b6102ac610462366004611504565b610e98565b6101f65460ff166040519015158152602001610212565b60405163765c2c6160e01b81526101f4600482015260009073__$f65c4aabf90eae242bce3d3daa005e5d40$__9063765c2c61906024015b602060405180830381865af41580156104d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f79190611557565b905090565b610504611056565b6101f5546105138482856109a6565b949350505050565b6105236110e2565b604051637d0aba4f60e01b81526101f460048201526001600160401b038316602482015273__$f65c4aabf90eae242bce3d3daa005e5d40$__90637d0aba4f906044015b600060405180830381865af4158015610584573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105ac9190810190611665565b92915050565b6105ba6110e2565b60405163d55da6a360e01b81526101f46004820152602481018490526044810183905273__$f65c4aabf90eae242bce3d3daa005e5d40$__9063d55da6a3906064015b600060405180830381865af415801561061a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106429190810190611665565b9392505050565b6106516110e2565b604051636ac0c5c760e11b81526101f46004820152602481018490526044810183905273__$f65c4aabf90eae242bce3d3daa005e5d40$__9063d5818b8e906064016105fd565b604051631b8bf99b60e21b81526101f4600482015260009073__$f65c4aabf90eae242bce3d3daa005e5d40$__90636e2fe66c906024016104b6565b6106dc610ed3565b6106e5816107aa565b6106ed610835565b50565b604051631a3046d760e01b81526101f4600482015260009073__$f65c4aabf90eae242bce3d3daa005e5d40$__90631a3046d7906024016104b6565b610734610ed3565b6040516306fb157560e01b81526101f46004820152602481018390526044810182905273__$f65c4aabf90eae242bce3d3daa005e5d40$__906306fb15759060640160006040518083038186803b15801561078e57600080fd5b505af41580156107a2573d6000803e3d6000fd5b505050505050565b6107b2610ed3565b60405163e1f0eaa960e01b815273__$f65c4aabf90eae242bce3d3daa005e5d40$__9063e1f0eaa9906107ed906101f4908590600401611729565b60006040518083038186803b15801561080557600080fd5b505af4158015610819573d6000803e3d6000fd5b5050505050565b61082861112b565b61083061112b565b919050565b61083d610ed3565b60405163175ba3e960e11b81526101f4600482015273__$f65c4aabf90eae242bce3d3daa005e5d40$__90632eb747d29060240160006040518083038186803b15801561088957600080fd5b505af415801561089d573d6000803e3d6000fd5b50505050565b6108ab610ed3565b6108b56000610f2e565b565b6108bf6111bc565b6040516303af477f60e51b815273__$0cc19979d99306550853e0a445a59df756$__906375e8efe0906108f6908590600401611771565b61010060405180830381865af4158015610914573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ac919061185c565b610940610ed3565b604051638ad7195d60e01b81526101f460048201526001600160401b038216602482015273__$f65c4aabf90eae242bce3d3daa005e5d40$__90638ad7195d906044016107ed565b610990610ed3565b61099a828261072c565b6109a2610835565b5050565b6109ae611056565b6101f45484146109fc5760405162461bcd60e51b8152602060048201526014602482015273092c8cadce8d2e8f240d2c840dad2e6dac2e8c6d60631b60448201526064015b60405180910390fd5b604051630b1a9cd360e01b81526101f460048201526024810184905260009073__$f65c4aabf90eae242bce3d3daa005e5d40$__90630b1a9cd390604401606060405180830381865af4158015610a57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7b91906118bd565b6040805160808101825286815282516020808301919091528301805182840152838301516060830152519151630b2bcd1b60e11b81526101f460048201526001600160401b0387166024820152604481019290925291925060009073__$f65c4aabf90eae242bce3d3daa005e5d40$__906316579a3690606401600060405180830381865af4158015610b12573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b3a9190810190611665565b6040805161010081018252825181526020808401511515818301528284015182840152606080850151908301526080808501519083015260a08085015115159083015260c0808501519083015260e093840151938201939093528151808301909252938152908101929092525095945050505050565b610bb86110e2565b604051620cf08960e41b81526101f460048201526024810183905273__$f65c4aabf90eae242bce3d3daa005e5d40$__9062cf089090604401610567565b610c1a60405180606001604052806000815260200160008152602001600081525090565b604051630b1a9cd360e01b81526101f460048201526024810183905273__$f65c4aabf90eae242bce3d3daa005e5d40$__90630b1a9cd390604401606060405180830381865af4158015610c72573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ac91906118bd565b610c9e6110e2565b6040516397ac539160e01b81526101f460048201526024810183905273__$f65c4aabf90eae242bce3d3daa005e5d40$__906397ac539190604401610567565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b0316600081158015610d235750825b90506000826001600160401b03166001148015610d3f5750303b155b905081158015610d4d575080155b15610d6b5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610d9557845460ff60401b1916600160401b1785555b610d9e86610f9f565b610da733610ff4565b83156107a257845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050505050565b604051631e75e7f360e01b81526101f4600482015260009073__$f65c4aabf90eae242bce3d3daa005e5d40$__90631e75e7f3906024016104b6565b610e386110e2565b604051630b2bcd1b60e11b81526101f460048201526001600160401b03841660248201526044810183905273__$f65c4aabf90eae242bce3d3daa005e5d40$__906316579a36906064016105fd565b610e8f610ed3565b6106e581610938565b610ea0610ed3565b6001600160a01b038116610eca57604051631e4fbdf760e01b8152600060048201526024016109f3565b6106ed81610f2e565b33610f057f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146108b55760405163118cdaa760e01b81523360048201526024016109f3565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b60405163d3cd4e9b60e01b81526101f460048201526001600160a01b03821660248201523060448201526028606482015273__$f65c4aabf90eae242bce3d3daa005e5d40$__9063d3cd4e9b906084016107ed565b610ffc611005565b6106ed8161104e565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166108b557604051631afcd79f60e31b815260040160405180910390fd5b610ea0611005565b604051806040016040528061108c6040518060800160405280600081526020016000815260200160008152602001600081525090565b81526020016110dd6040518061010001604052806000815260200160001515815260200160608152602001600081526020016000815260200160001515815260200160008152602001600081525090565b905290565b6040518061010001604052806000815260200160001515815260200160608152602001600081526020016000815260200160001515815260200160008152602001600081525090565b604051806101c0016040528060008152602001600060ff168152602001600015158152602001600015158152602001600060ff168152602001600063ffffffff1681526020016000815260200160006001600160401b0316815260200160006001600160401b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518061010001604052806008906020820280368337509192915050565b80356001600160401b038116811461083057600080fd5b6000806040838503121561120557600080fd5b82359150611215602084016111db565b90509250929050565b8051825260208082015115158184015260408083015161010091850182905280519185018290526000926101208601929181019184905b808210156112755783518552938201939282019260019190910190611255565b50505050606083015160608501526080830151608085015260a08301516112a060a086018215159052565b5060c083015160c085015260e083015160e08501528091505092915050565b60208152600082518051602084015260208101516040840152604081015160608401526060810151608084015250602083015160a08084015261051360c084018261121e565b60006020828403121561131757600080fd5b610642826111db565b602081526000610642602083018461121e565b6000806040838503121561134657600080fd5b50508035926020909101359150565b600061010080838503121561136957600080fd5b83818401111561137857600080fd5b509092915050565b815181526020808301516101c083019161139e9084018260ff169052565b5060408301516113b2604084018215159052565b5060608301516113c6606084018215159052565b5060808301516113db608084018260ff169052565b5060a08301516113f360a084018263ffffffff169052565b5060c083015160c083015260e083015161141860e08401826001600160401b03169052565b50610100838101516001600160401b03169083015261012080840151908301526101408084015190830152610160808401519083015261018080840151908301526101a092830151929091019190915290565b60006101c0828403121561147e57600080fd5b50919050565b6101008101818360005b60088110156114ad57815183526020928301929091019060010161148e565b50505092915050565b6000806000606084860312156114cb57600080fd5b83359250602084013591506114e2604085016111db565b90509250925092565b6000602082840312156114fd57600080fd5b5035919050565b60006020828403121561151657600080fd5b81356001600160a01b038116811461064257600080fd5b6000806040838503121561154057600080fd5b611549836111db565b946020939093013593505050565b60006020828403121561156957600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b03811182821017156115a9576115a9611570565b60405290565b80151581146106ed57600080fd5b8051610830816115af565b600082601f8301126115d957600080fd5b815160206001600160401b03808311156115f5576115f5611570565b8260051b604051601f19603f8301168101818110848211171561161a5761161a611570565b604052938452602081870181019490810192508785111561163a57600080fd5b6020870191505b8482101561165a57815183529183019190830190611641565b979650505050505050565b60006020828403121561167757600080fd5b81516001600160401b038082111561168e57600080fd5b9083019061010082860312156116a357600080fd5b6116ab611586565b825181526116bb602084016115bd565b60208201526040830151828111156116d257600080fd5b6116de878286016115c8565b604083015250606083015160608201526080830151608082015261170460a084016115bd565b60a082015260c083015160c082015260e083015160e082015280935050505092915050565b82815261012081016101008360208401379392505050565b803560ff8116811461083057600080fd5b8035610830816115af565b803563ffffffff8116811461083057600080fd5b813581526101c0810161178660208401611741565b60ff16602083015261179a60408401611752565b151560408301526117ad60608401611752565b151560608301526117c060808401611741565b60ff1660808301526117d460a0840161175d565b63ffffffff1660a083015260c083810135908301526117f560e084016111db565b6001600160401b031660e08301526101006118118482016111db565b6001600160401b03169083015261012083810135908301526101408084013590830152610160808401359083015261018080840135908301526101a092830135929091019190915290565b600061010080838503121561187057600080fd5b83601f84011261187f57600080fd5b611887611586565b90830190808583111561189957600080fd5b845b838110156118b357805183526020928301920161189b565b5095945050505050565b6000606082840312156118cf57600080fd5b604051606081018181106001600160401b03821117156118f1576118f1611570565b8060405250825181526020830151602082015260408301516040820152809150509291505056fea2646970667358221220c89be9dc7d09e332a97e4ce137a31ce0528fd292454b4c199e20f553485bae7464736f6c63430008170033",
    "sourceMap": "498:2951:59:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "lib/contracts/contracts/lib/ClaimBuilder.sol": {
        "ClaimBuilder": [
          {
            "start": 2286,
            "length": 20
          }
        ]
      },
      "lib/contracts/contracts/lib/IdentityLib.sol": {
        "IdentityLib": [
          {
            "start": 1208,
            "length": 20
          },
          {
            "start": 1385,
            "length": 20
          },
          {
            "start": 1535,
            "length": 20
          },
          {
            "start": 1686,
            "length": 20
          },
          {
            "start": 1746,
            "length": 20
          },
          {
            "start": 1834,
            "length": 20
          },
          {
            "start": 1913,
            "length": 20
          },
          {
            "start": 2017,
            "length": 20
          },
          {
            "start": 2164,
            "length": 20
          },
          {
            "start": 2438,
            "length": 20
          },
          {
            "start": 2621,
            "length": 20
          },
          {
            "start": 2808,
            "length": 20
          },
          {
            "start": 3061,
            "length": 20
          },
          {
            "start": 3160,
            "length": 20
          },
          {
            "start": 3292,
            "length": 20
          },
          {
            "start": 3630,
            "length": 20
          },
          {
            "start": 3717,
            "length": 20
          },
          {
            "start": 4082,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101fb5760003560e01c8063715018a61161011a578063b8db6871116100ad578063da68a0b11161007c578063da68a0b114610426578063e26ecb0b1461042e578063f2a8ed5a14610441578063f2fde38b14610454578063f84c7c1e1461046757600080fd5b8063b8db6871146103c2578063c1e32733146103f7578063c4d66de81461040a578063c6365a3b1461041d57600080fd5b8063961fc416116100e9578063961fc416146103805780639674cfa414610393578063aad729211461039c578063b57a40cb146103af57600080fd5b8063715018a61461030b57806373c0824414610313578063891eb608146103335780638da5cb5b1461034657600080fd5b8063412363d3116101925780635aa7396b116101615780635aa7396b146102d25780635b9c895d146102e55780635d1ca631146102fa5780636c87e2fa1461030357600080fd5b8063412363d3146102995780634ddad0b3146102ae578063523b8136146102b65780635584b091146102bf57600080fd5b8063310d0d5b116101ce578063310d0d5b1461026e5780633d59ec60146102815780633df432fc1461028a5780633f0c66481461029257600080fd5b806301c85c7714610200578063110c96a71461021b578063264850631461023b5780632d5c4f251461025b575b600080fd5b61020861047e565b6040519081526020015b60405180910390f35b61022e6102293660046111f2565b6104fc565b60405161021291906112bf565b61024e610249366004611305565b61051b565b6040516102129190611320565b61024e610269366004611333565b6105b2565b61024e61027c366004611333565b610649565b6101f554610208565b610208610698565b6028610208565b6102ac6102a7366004611355565b6106d4565b005b6102086106f0565b61028e54610208565b6102ac6102cd366004611333565b61072c565b6102ac6102e0366004611355565b6107aa565b6102ed610820565b6040516102129190611380565b6101f454610208565b6102ac610835565b6102ac6108a3565b61032661032136600461146b565b6108b7565b6040516102129190611484565b6102ac610341366004611305565b610938565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b039091168152602001610212565b6102ac61038e366004611333565b610988565b61028f54610208565b61022e6103aa3660046114b6565b6109a6565b61024e6103bd3660046114eb565b610bb0565b6103d56103d03660046114eb565b610bf6565b6040805182518152602080840151908201529181015190820152606001610212565b61024e6104053660046114eb565b610c96565b6102ac610418366004611504565b610cde565b61029054610208565b610208610df4565b61024e61043c36600461152d565b610e30565b6102ac61044f366004611305565b610e87565b6102ac610462366004611504565b610e98565b6101f65460ff166040519015158152602001610212565b60405163765c2c6160e01b81526101f4600482015260009073__$f65c4aabf90eae242bce3d3daa005e5d40$__9063765c2c61906024015b602060405180830381865af41580156104d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f79190611557565b905090565b610504611056565b6101f5546105138482856109a6565b949350505050565b6105236110e2565b604051637d0aba4f60e01b81526101f460048201526001600160401b038316602482015273__$f65c4aabf90eae242bce3d3daa005e5d40$__90637d0aba4f906044015b600060405180830381865af4158015610584573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105ac9190810190611665565b92915050565b6105ba6110e2565b60405163d55da6a360e01b81526101f46004820152602481018490526044810183905273__$f65c4aabf90eae242bce3d3daa005e5d40$__9063d55da6a3906064015b600060405180830381865af415801561061a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106429190810190611665565b9392505050565b6106516110e2565b604051636ac0c5c760e11b81526101f46004820152602481018490526044810183905273__$f65c4aabf90eae242bce3d3daa005e5d40$__9063d5818b8e906064016105fd565b604051631b8bf99b60e21b81526101f4600482015260009073__$f65c4aabf90eae242bce3d3daa005e5d40$__90636e2fe66c906024016104b6565b6106dc610ed3565b6106e5816107aa565b6106ed610835565b50565b604051631a3046d760e01b81526101f4600482015260009073__$f65c4aabf90eae242bce3d3daa005e5d40$__90631a3046d7906024016104b6565b610734610ed3565b6040516306fb157560e01b81526101f46004820152602481018390526044810182905273__$f65c4aabf90eae242bce3d3daa005e5d40$__906306fb15759060640160006040518083038186803b15801561078e57600080fd5b505af41580156107a2573d6000803e3d6000fd5b505050505050565b6107b2610ed3565b60405163e1f0eaa960e01b815273__$f65c4aabf90eae242bce3d3daa005e5d40$__9063e1f0eaa9906107ed906101f4908590600401611729565b60006040518083038186803b15801561080557600080fd5b505af4158015610819573d6000803e3d6000fd5b5050505050565b61082861112b565b61083061112b565b919050565b61083d610ed3565b60405163175ba3e960e11b81526101f4600482015273__$f65c4aabf90eae242bce3d3daa005e5d40$__90632eb747d29060240160006040518083038186803b15801561088957600080fd5b505af415801561089d573d6000803e3d6000fd5b50505050565b6108ab610ed3565b6108b56000610f2e565b565b6108bf6111bc565b6040516303af477f60e51b815273__$0cc19979d99306550853e0a445a59df756$__906375e8efe0906108f6908590600401611771565b61010060405180830381865af4158015610914573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ac919061185c565b610940610ed3565b604051638ad7195d60e01b81526101f460048201526001600160401b038216602482015273__$f65c4aabf90eae242bce3d3daa005e5d40$__90638ad7195d906044016107ed565b610990610ed3565b61099a828261072c565b6109a2610835565b5050565b6109ae611056565b6101f45484146109fc5760405162461bcd60e51b8152602060048201526014602482015273092c8cadce8d2e8f240d2c840dad2e6dac2e8c6d60631b60448201526064015b60405180910390fd5b604051630b1a9cd360e01b81526101f460048201526024810184905260009073__$f65c4aabf90eae242bce3d3daa005e5d40$__90630b1a9cd390604401606060405180830381865af4158015610a57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7b91906118bd565b6040805160808101825286815282516020808301919091528301805182840152838301516060830152519151630b2bcd1b60e11b81526101f460048201526001600160401b0387166024820152604481019290925291925060009073__$f65c4aabf90eae242bce3d3daa005e5d40$__906316579a3690606401600060405180830381865af4158015610b12573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b3a9190810190611665565b6040805161010081018252825181526020808401511515818301528284015182840152606080850151908301526080808501519083015260a08085015115159083015260c0808501519083015260e093840151938201939093528151808301909252938152908101929092525095945050505050565b610bb86110e2565b604051620cf08960e41b81526101f460048201526024810183905273__$f65c4aabf90eae242bce3d3daa005e5d40$__9062cf089090604401610567565b610c1a60405180606001604052806000815260200160008152602001600081525090565b604051630b1a9cd360e01b81526101f460048201526024810183905273__$f65c4aabf90eae242bce3d3daa005e5d40$__90630b1a9cd390604401606060405180830381865af4158015610c72573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ac91906118bd565b610c9e6110e2565b6040516397ac539160e01b81526101f460048201526024810183905273__$f65c4aabf90eae242bce3d3daa005e5d40$__906397ac539190604401610567565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b0316600081158015610d235750825b90506000826001600160401b03166001148015610d3f5750303b155b905081158015610d4d575080155b15610d6b5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610d9557845460ff60401b1916600160401b1785555b610d9e86610f9f565b610da733610ff4565b83156107a257845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050505050565b604051631e75e7f360e01b81526101f4600482015260009073__$f65c4aabf90eae242bce3d3daa005e5d40$__90631e75e7f3906024016104b6565b610e386110e2565b604051630b2bcd1b60e11b81526101f460048201526001600160401b03841660248201526044810183905273__$f65c4aabf90eae242bce3d3daa005e5d40$__906316579a36906064016105fd565b610e8f610ed3565b6106e581610938565b610ea0610ed3565b6001600160a01b038116610eca57604051631e4fbdf760e01b8152600060048201526024016109f3565b6106ed81610f2e565b33610f057f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146108b55760405163118cdaa760e01b81523360048201526024016109f3565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b60405163d3cd4e9b60e01b81526101f460048201526001600160a01b03821660248201523060448201526028606482015273__$f65c4aabf90eae242bce3d3daa005e5d40$__9063d3cd4e9b906084016107ed565b610ffc611005565b6106ed8161104e565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166108b557604051631afcd79f60e31b815260040160405180910390fd5b610ea0611005565b604051806040016040528061108c6040518060800160405280600081526020016000815260200160008152602001600081525090565b81526020016110dd6040518061010001604052806000815260200160001515815260200160608152602001600081526020016000815260200160001515815260200160008152602001600081525090565b905290565b6040518061010001604052806000815260200160001515815260200160608152602001600081526020016000815260200160001515815260200160008152602001600081525090565b604051806101c0016040528060008152602001600060ff168152602001600015158152602001600015158152602001600060ff168152602001600063ffffffff1681526020016000815260200160006001600160401b0316815260200160006001600160401b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518061010001604052806008906020820280368337509192915050565b80356001600160401b038116811461083057600080fd5b6000806040838503121561120557600080fd5b82359150611215602084016111db565b90509250929050565b8051825260208082015115158184015260408083015161010091850182905280519185018290526000926101208601929181019184905b808210156112755783518552938201939282019260019190910190611255565b50505050606083015160608501526080830151608085015260a08301516112a060a086018215159052565b5060c083015160c085015260e083015160e08501528091505092915050565b60208152600082518051602084015260208101516040840152604081015160608401526060810151608084015250602083015160a08084015261051360c084018261121e565b60006020828403121561131757600080fd5b610642826111db565b602081526000610642602083018461121e565b6000806040838503121561134657600080fd5b50508035926020909101359150565b600061010080838503121561136957600080fd5b83818401111561137857600080fd5b509092915050565b815181526020808301516101c083019161139e9084018260ff169052565b5060408301516113b2604084018215159052565b5060608301516113c6606084018215159052565b5060808301516113db608084018260ff169052565b5060a08301516113f360a084018263ffffffff169052565b5060c083015160c083015260e083015161141860e08401826001600160401b03169052565b50610100838101516001600160401b03169083015261012080840151908301526101408084015190830152610160808401519083015261018080840151908301526101a092830151929091019190915290565b60006101c0828403121561147e57600080fd5b50919050565b6101008101818360005b60088110156114ad57815183526020928301929091019060010161148e565b50505092915050565b6000806000606084860312156114cb57600080fd5b83359250602084013591506114e2604085016111db565b90509250925092565b6000602082840312156114fd57600080fd5b5035919050565b60006020828403121561151657600080fd5b81356001600160a01b038116811461064257600080fd5b6000806040838503121561154057600080fd5b611549836111db565b946020939093013593505050565b60006020828403121561156957600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b03811182821017156115a9576115a9611570565b60405290565b80151581146106ed57600080fd5b8051610830816115af565b600082601f8301126115d957600080fd5b815160206001600160401b03808311156115f5576115f5611570565b8260051b604051601f19603f8301168101818110848211171561161a5761161a611570565b604052938452602081870181019490810192508785111561163a57600080fd5b6020870191505b8482101561165a57815183529183019190830190611641565b979650505050505050565b60006020828403121561167757600080fd5b81516001600160401b038082111561168e57600080fd5b9083019061010082860312156116a357600080fd5b6116ab611586565b825181526116bb602084016115bd565b60208201526040830151828111156116d257600080fd5b6116de878286016115c8565b604083015250606083015160608201526080830151608082015261170460a084016115bd565b60a082015260c083015160c082015260e083015160e082015280935050505092915050565b82815261012081016101008360208401379392505050565b803560ff8116811461083057600080fd5b8035610830816115af565b803563ffffffff8116811461083057600080fd5b813581526101c0810161178660208401611741565b60ff16602083015261179a60408401611752565b151560408301526117ad60608401611752565b151560608301526117c060808401611741565b60ff1660808301526117d460a0840161175d565b63ffffffff1660a083015260c083810135908301526117f560e084016111db565b6001600160401b031660e08301526101006118118482016111db565b6001600160401b03169083015261012083810135908301526101408084013590830152610160808401359083015261018080840135908301526101a092830135929091019190915290565b600061010080838503121561187057600080fd5b83601f84011261187f57600080fd5b611887611586565b90830190808583111561189957600080fd5b845b838110156118b357805183526020928301920161189b565b5095945050505050565b6000606082840312156118cf57600080fd5b604051606081018181106001600160401b03821117156118f1576118f1611570565b8060405250825181526020830151602082015260408301516040820152809150509291505056fea2646970667358221220c89be9dc7d09e332a97e4ce137a31ce0528fd292454b4c199e20f553485bae7464736f6c63430008170033",
    "sourceMap": "498:2951:59:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3900:129:15;;;:::i;:::-;;;160:25:63;;;148:2;133:18;3900:129:15;;;;;;;;7043:263;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3072:184::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4729:211::-;;;;;;:::i;:::-;;:::i;2383:213::-;;;;;;:::i;:::-;;:::i;6719:118::-;6801:29;;6719:118;;2705:119;;;:::i;1314:87::-;1392:2;1314:87;;1390:131:59;;;;;;:::i;:::-;;:::i;:::-;;2847:121;;;:::i;5979:138:15:-;6066:33;:44;5979:138;;2200:147:59;;;;;;:::i;:::-;;:::i;1929:113::-;;;;;;:::i;:::-;;:::i;2976:169::-;;;:::i;:::-;;;;;;;:::i;5583:82:15:-;5647:8;:11;5583:82;;2663:91:59;;;:::i;3155:101:38:-;;;:::i;3264:182:59:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2476:126::-;;;;;;:::i;:::-;;:::i;2441:144:38:-;1313:22;2570:8;2441:144;;-1:-1:-1;;;;;2570:8:38;;;6104:51:63;;6092:2;6077:18;2441:144:38;5958:203:63;1529:165:59;;;;;;:::i;:::-;;:::i;6228:148:15:-;6320:49;;6228:148;;7560:1112;;;;;;:::i;:::-;;:::i;1922:173::-;;;;;;:::i;:::-;;:::i;5353:150::-;;;;;;:::i;:::-;;:::i;:::-;;;;6886:13:63;;6868:32;;6956:4;6944:17;;;6938:24;6916:20;;;6909:54;7007:17;;;7001:24;6979:20;;;6972:54;6856:2;6841:18;5353:150:15;6676:356:63;4267:171:15;;;;;;:::i;:::-;;:::i;1214:168:59:-;;;;;;:::i;:::-;;:::i;6476:136:15:-;6562:43;;6476:136;;5047:117;;;:::i;3557:224::-;;;;;;:::i;:::-;;:::i;1702:144:59:-;;;;;;:::i;:::-;;:::i;3405:215:38:-;;;;;;:::i;:::-;;:::i;5768:109:15:-;5844:26;;;;5768:109;;7750:14:63;;7743:22;7725:41;;7713:2;7698:18;5768:109:15;7585:187:63;3900:129:15;3989:33;;-1:-1:-1;;;3989:33:15;;:8;:33;;;160:25:63;3963:7:15;;3989:31;;;;133:18:63;;3989:33:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3982:40;;3900:129;:::o;7043:263::-;7141:23;;:::i;:::-;7198:29;;7244:55;7276:2;7198:29;7293:5;7244:31;:55::i;:::-;7237:62;7043:263;-1:-1:-1;;;;7043:263:15:o;3072:184::-;3167:19;;:::i;:::-;3205:44;;-1:-1:-1;;;3205:44:15;;:8;:44;;;8382:25:63;-1:-1:-1;;;;;8443:31:63;;8423:18;;;8416:59;3205:27:15;;;;8355:18:63;;3205:44:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3205:44:15;;;;;;;;;;;;:::i;:::-;3198:51;3072:184;-1:-1:-1;;3072:184:15:o;4729:211::-;4846:19;;:::i;:::-;4884:49;;-1:-1:-1;;;4884:49:15;;:8;:49;;;11311:25:63;11352:18;;;11345:34;;;11395:18;;;11388:34;;;4884:27:15;;;;11284:18:63;;4884:49:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4884:49:15;;;;;;;;;;;;:::i;:::-;4877:56;4729:211;-1:-1:-1;;;4729:211:15:o;2383:213::-;2501:19;;:::i;:::-;2539:50;;-1:-1:-1;;;2539:50:15;;:8;:50;;;11311:25:63;11352:18;;;11345:34;;;11395:18;;;11388:34;;;2539:28:15;;;;11284:18:63;;2539:50:15;11078:350:63;2705:119:15;2789:28;;-1:-1:-1;;;2789:28:15;;:8;:28;;;160:25:63;2763:7:15;;2789:26;;;;133:18:63;;2789:28:15;14:177:63;1390:131:59;2334:13:38;:11;:13::i;:::-;1473:15:59::1;1482:5;1473:8;:15::i;:::-;1499:14;:12;:14::i;:::-;1390:131:::0;:::o;2847:121::-;2932:28;;-1:-1:-1;;;2932:28:59;;:8;:28;;;160:25:63;2905:7:59;;2932:26;;;;133:18:63;;2932:28:59;14:177:63;2200:147:59;2334:13:38;:11;:13::i;:::-;2296:43:59::1;::::0;-1:-1:-1;;;2296:43:59;;:8:::1;:43;::::0;::::1;11311:25:63::0;11352:18;;;11345:34;;;11395:18;;;11388:34;;;2296:21:59::1;::::0;::::1;::::0;11284:18:63;;2296:43:59::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2200:147:::0;;:::o;1929:113::-;2334:13:38;:11;:13::i;:::-;2010:24:59::1;::::0;-1:-1:-1;;;2010:24:59;;:17:::1;::::0;::::1;::::0;:24:::1;::::0;:8:::1;::::0;2028:5;;2010:24:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1929:113:::0;:::o;2976:169::-;3029:29;;:::i;:::-;3071:39;;:::i;:::-;3128:9;2976:169;-1:-1:-1;2976:169:59:o;2663:91::-;2334:13:38;:11;:13::i;:::-;2723:23:59::1;::::0;-1:-1:-1;;;2723:23:59;;:8:::1;:23;::::0;::::1;160:25:63::0;2723:21:59::1;::::0;::::1;::::0;133:18:63;;2723:23:59::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2663:91::o:0;3155:101:38:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;3264:182:59:-;3372:17;;:::i;:::-;3409:29;;-1:-1:-1;;;3409:29:59;;:12;;:18;;:29;;3428:9;;3409:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2476:126::-;2334:13:38;:11;:13::i;:::-;2557:37:59::1;::::0;-1:-1:-1;;;2557:37:59;;:8:::1;:37;::::0;::::1;8382:25:63::0;-1:-1:-1;;;;;8443:31:63;;8423:18;;;8416:59;2557:20:59::1;::::0;::::1;::::0;8355:18:63;;2557:37:59::1;8179:302:63::0;1529:165:59;2334:13:38;:11;:13::i;:::-;1627:34:59::1;1640:9;1651;1627:12;:34::i;:::-;1672:14;:12;:14::i;:::-;1529:165:::0;;:::o;7560:1112:15:-;7693:23;;:::i;:::-;7742:8;:11;7736:17;;7728:50;;;;-1:-1:-1;;;7728:50:15;;14774:2:63;7728:50:15;;;14756:21:63;14813:2;14793:18;;;14786:30;-1:-1:-1;;;14832:18:63;;;14825:50;14892:18;;7728:50:15;;;;;;;;;7832:31;;-1:-1:-1;;;7832:31:15;;:8;:31;;;15126:25:63;15167:18;;;15160:34;;;7788:41:15;;7832:24;;;;15099:18:63;;7832:31:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7914:232;;;;;;;;;;;8042:27;;7914:232;;;;;;;;8103:32;;;;7914:232;;;;7986:26;;;;7914:232;;;;8247:32;8181:108;;-1:-1:-1;;;8181:108:15;;:8;:108;;;15999:25:63;-1:-1:-1;;;;;16060:31:63;;16040:18;;;16033:59;16108:18;;;16101:34;;;;8042:27:15;;-1:-1:-1;;;8181:33:15;;;;15972:18:63;;8181:108:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8181:108:15;;;;;;;;;;;;:::i;:::-;8318:279;;;;;;;;8344:6;;8318:279;;;8375:11;;;;8318:279;;;;;;8410:10;;;;8318:279;;;;;8441:7;;;;8318:279;;;;;8469:7;;;;8318:279;;;;;8504:14;;;;8318:279;;;;;;;8542:10;;;;8318:279;;;;;8576:10;;;;8318:279;;;;;;;8615:50;;;;;;;;;;;;;;;;;;-1:-1:-1;8615:50:15;7560:1112;-1:-1:-1;;;;;7560:1112:15:o;1922:173::-;2012:19;;:::i;:::-;2050:38;;-1:-1:-1;;;2050:38:15;;:8;:38;;;15126:25:63;15167:18;;;15160:34;;;2050:22:15;;;;15099:18:63;;2050:38:15;14921:279:63;5353:150:15;5422:24;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;5422:24:15;5465:31;;-1:-1:-1;;;5465:31:15;;:8;:31;;;15126:25:63;15167:18;;;15160:34;;;5465:24:15;;;;15099:18:63;;5465:31:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4267:171::-;4356:19;;:::i;:::-;4394:37;;-1:-1:-1;;;4394:37:15;;:8;:37;;;15126:25:63;15167:18;;;15160:34;;;4394:21:15;;;;15099:18:63;;4394:37:15;14921:279:63;1214:168:59;8870:21:39;4302:15;;-1:-1:-1;;;4302:15:39;;;;4301:16;;-1:-1:-1;;;;;4348:14:39;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;-1:-1:-1;;;;;4790:16:39;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:39;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:39;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:39;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:39;-1:-1:-1;;;5013:22:39;;;4979:67;1301:36:59::1;1318:18;1301:16;:36::i;:::-;1348:26;1363:10;1348:14;:26::i;:::-;5070:14:39::0;5066:101;;;5100:23;;-1:-1:-1;;;;5100:23:39;;;5142:14;;-1:-1:-1;16299:50:63;;5142:14:39;;16287:2:63;16272:18;5142:14:39;;;;;;;4092:1081;;;;;1214:168:59;:::o;5047:117:15:-;5130:27;;-1:-1:-1;;;5130:27:15;;:8;:27;;;160:25:63;5104:7:15;;5130:25;;;;133:18:63;;5130:27:15;14:177:63;3557:224:15;3680:19;;:::i;:::-;3718:56;;-1:-1:-1;;;3718:56:15;;:8;:56;;;15999:25:63;-1:-1:-1;;;;;16060:31:63;;16040:18;;;16033:59;16108:18;;;16101:34;;;3718:33:15;;;;15972:18:63;;3718:56:15;15768:373:63;1702:144:59;2334:13:38;:11;:13::i;:::-;1785:28:59::1;1797:15;1785:11;:28::i;3405:215:38:-:0;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:38;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:38;;3562:1:::1;3534:31;::::0;::::1;6104:51:63::0;6077:18;;3534:31:38::1;5958:203:63::0;3485:91:38::1;3585:28;3604:8;3585:18;:28::i;2658:162::-:0;966:10:40;2717:7:38;1313:22;2570:8;-1:-1:-1;;;;;2570:8:38;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:38;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:38;;966:10:40;2763:40:38;;;6104:51:63;6077:18;;2763:40:38;5958:203:63;3774:248:38;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:38;;-1:-1:-1;;;;;3941:19:38;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;1538:149:15:-;1611:69;;-1:-1:-1;;;1611:69:15;;:8;:69;;;16622:25:63;-1:-1:-1;;;;;16721:15:63;;16701:18;;;16694:43;1659:4:15;16753:18:63;;;16746:43;1392:2:15;16805:18:63;;;16798:34;1611:19:15;;;;16594::63;;1611:69:15;16360:478:63;1847:127:38;6931:20:39;:18;:20::i;:::-;1929:38:38::1;1954:12;1929:24;:38::i;7084:141:39:-:0;8870:21;8560:40;-1:-1:-1;;;8560:40:39;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:39;;;;;;;;;;;1980:235:38;6931:20:39;:18;:20::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;196:171:63:-;263:20;;-1:-1:-1;;;;;312:30:63;;302:41;;292:69;;357:1;354;347:12;372:252;439:6;447;500:2;488:9;479:7;475:23;471:32;468:52;;;516:1;513;506:12;468:52;552:9;539:23;529:33;;581:37;614:2;603:9;599:18;581:37;:::i;:::-;571:47;;372:252;;;;;:::o;725:1069::-;861:12;;849:25;;893:4;949:16;;;943:23;936:31;929:39;913:14;;;906:63;1015:4;1004:16;;;998:23;801:6;1037:14;;;1030:26;;;1105:19;;828:12;;;1133:20;;;773:3;;1180;1171:13;;;1207:23;;;;773:3;;1258:175;1272:6;1269:1;1266:13;1258:175;;;1335:13;;1321:28;;1371:14;;;;1408:15;;;;1294:1;1287:9;;;;;1258:175;;;1262:3;;;;1482:4;1475:5;1471:16;1465:23;1458:4;1453:3;1449:14;1442:47;1538:4;1531:5;1527:16;1521:23;1514:4;1509:3;1505:14;1498:47;1593:4;1586:5;1582:16;1576:23;1608:47;1649:4;1644:3;1640:14;1624;699:13;692:21;680:34;;629:91;1608:47;;1704:4;1697:5;1693:16;1687:23;1680:4;1675:3;1671:14;1664:47;1760:4;1753:5;1749:16;1743:23;1736:4;1731:3;1727:14;1720:47;1783:5;1776:12;;;725:1069;;;;:::o;1799:619::-;1996:2;1985:9;1978:21;1959:4;2024:6;2018:13;2073:2;2067:9;2062:2;2051:9;2047:18;2040:37;2127:2;2123;2119:11;2113:18;2108:2;2097:9;2093:18;2086:46;2182:2;2178;2174:11;2168:18;2163:2;2152:9;2148:18;2141:46;2238:2;2234;2230:11;2224:18;2218:3;2207:9;2203:19;2196:47;;2290:2;2282:6;2278:15;2272:22;2332:4;2325;2314:9;2310:20;2303:34;2354:58;2407:3;2396:9;2392:19;2378:12;2354:58;:::i;2423:184::-;2481:6;2534:2;2522:9;2513:7;2509:23;2505:32;2502:52;;;2550:1;2547;2540:12;2502:52;2573:28;2591:9;2573:28;:::i;2612:252::-;2787:2;2776:9;2769:21;2750:4;2807:51;2854:2;2843:9;2839:18;2831:6;2807:51;:::i;2869:248::-;2937:6;2945;2998:2;2986:9;2977:7;2973:23;2969:32;2966:52;;;3014:1;3011;3004:12;2966:52;-1:-1:-1;;3037:23:63;;;3107:2;3092:18;;;3079:32;;-1:-1:-1;2869:248:63:o;3122:273::-;3206:6;3237:3;3281:2;3269:9;3260:7;3256:23;3252:32;3249:52;;;3297:1;3294;3287:12;3249:52;3336:7;3331:2;3320:9;3316:18;3313:31;3310:51;;;3357:1;3354;3347:12;3310:51;-1:-1:-1;3380:9:63;;3122:273;-1:-1:-1;;3122:273:63:o;3686:1566::-;3905:13;;3887:32;;3966:4;3954:17;;;3948:24;3874:3;3859:19;;;3981:52;;4012:20;;3948:24;3467:4;3456:16;3444:29;;3400:75;3981:52;;4082:4;4074:6;4070:17;4064:24;4097:53;4144:4;4133:9;4129:20;4113:14;699:13;692:21;680:34;;629:91;4097:53;;4199:4;4191:6;4187:17;4181:24;4214:53;4261:4;4250:9;4246:20;4230:14;699:13;692:21;680:34;;629:91;4214:53;;4316:4;4308:6;4304:17;4298:24;4331:54;4379:4;4368:9;4364:20;4348:14;3467:4;3456:16;3444:29;;3400:75;4331:54;;4434:4;4426:6;4422:17;4416:24;4449:55;4498:4;4487:9;4483:20;4467:14;3556:10;3545:22;3533:35;;3480:94;4449:55;;4560:4;4552:6;4548:17;4542:24;4535:4;4524:9;4520:20;4513:54;4616:4;4608:6;4604:17;4598:24;4631:55;4680:4;4669:9;4665:20;4649:14;-1:-1:-1;;;;;3644:30:63;3632:43;;3579:102;4631:55;-1:-1:-1;4705:6:63;4748:15;;;4742:22;-1:-1:-1;;;;;3644:30:63;4807:18;;;3632:43;4845:6;4893:15;;;4887:22;4867:18;;;4860:50;4929:6;4977:15;;;4971:22;4951:18;;;4944:50;5013:6;5061:15;;;5055:22;5035:18;;;5028:50;5097:6;5145:15;;;5139:22;5119:18;;;5112:50;5181:6;5229:15;;;5223:22;5203:18;;;;5196:50;;;;5203:18;3686:1566::o;5257:196::-;5345:6;5398:3;5386:9;5377:7;5373:23;5369:33;5366:53;;;5415:1;5412;5405:12;5366:53;-1:-1:-1;5438:9:63;5257:196;-1:-1:-1;5257:196:63:o;5458:495::-;5638:3;5623:19;;5627:9;5719:6;5596:4;5753:194;5767:4;5764:1;5761:11;5753:194;;;5826:13;;5814:26;;5863:4;5887:12;;;;5922:15;;;;5787:1;5780:9;5753:194;;;5757:3;;;5458:495;;;;:::o;6166:320::-;6242:6;6250;6258;6311:2;6299:9;6290:7;6286:23;6282:32;6279:52;;;6327:1;6324;6317:12;6279:52;6363:9;6350:23;6340:33;;6420:2;6409:9;6405:18;6392:32;6382:42;;6443:37;6476:2;6465:9;6461:18;6443:37;:::i;:::-;6433:47;;6166:320;;;;;:::o;6491:180::-;6550:6;6603:2;6591:9;6582:7;6578:23;6574:32;6571:52;;;6619:1;6616;6609:12;6571:52;-1:-1:-1;6642:23:63;;6491:180;-1:-1:-1;6491:180:63:o;7037:286::-;7096:6;7149:2;7137:9;7128:7;7124:23;7120:32;7117:52;;;7165:1;7162;7155:12;7117:52;7191:23;;-1:-1:-1;;;;;7243:31:63;;7233:42;;7223:70;;7289:1;7286;7279:12;7328:252;7395:6;7403;7456:2;7444:9;7435:7;7431:23;7427:32;7424:52;;;7472:1;7469;7462:12;7424:52;7495:28;7513:9;7495:28;:::i;:::-;7485:38;7570:2;7555:18;;;;7542:32;;-1:-1:-1;;;7328:252:63:o;7990:184::-;8060:6;8113:2;8101:9;8092:7;8088:23;8084:32;8081:52;;;8129:1;8126;8119:12;8081:52;-1:-1:-1;8152:16:63;;7990:184;-1:-1:-1;7990:184:63:o;8486:127::-;8547:10;8542:3;8538:20;8535:1;8528:31;8578:4;8575:1;8568:15;8602:4;8599:1;8592:15;8618:250;8685:2;8679:9;8727:6;8715:19;;-1:-1:-1;;;;;8749:34:63;;8785:22;;;8746:62;8743:88;;;8811:18;;:::i;:::-;8847:2;8840:22;8618:250;:::o;8873:118::-;8959:5;8952:13;8945:21;8938:5;8935:32;8925:60;;8981:1;8978;8971:12;8996:132;9072:13;;9094:28;9072:13;9094:28;:::i;9133:905::-;9198:5;9251:3;9244:4;9236:6;9232:17;9228:27;9218:55;;9269:1;9266;9259:12;9218:55;9298:6;9292:13;9324:4;-1:-1:-1;;;;;9384:2:63;9380;9377:10;9374:36;;;9390:18;;:::i;:::-;9436:2;9433:1;9429:10;9468:2;9462:9;9531:2;9527:7;9522:2;9518;9514:11;9510:25;9502:6;9498:38;9586:6;9574:10;9571:22;9566:2;9554:10;9551:18;9548:46;9545:72;;;9597:18;;:::i;:::-;9633:2;9626:22;9683:18;;;9729:4;9761:15;;;9757:26;;;9717:17;;;;-1:-1:-1;9795:15:63;;;9792:35;;;9823:1;9820;9813:12;9792:35;9859:4;9851:6;9847:17;9836:28;;9873:135;9889:6;9884:3;9881:15;9873:135;;;9955:10;;9943:23;;9986:12;;;;9906;;;;9873:135;;;10026:6;9133:905;-1:-1:-1;;;;;;;9133:905:63:o;10043:1030::-;10136:6;10189:2;10177:9;10168:7;10164:23;10160:32;10157:52;;;10205:1;10202;10195:12;10157:52;10238:9;10232:16;-1:-1:-1;;;;;10308:2:63;10300:6;10297:14;10294:34;;;10324:1;10321;10314:12;10294:34;10347:22;;;;10403:6;10385:16;;;10381:29;10378:49;;;10423:1;10420;10413:12;10378:49;10449:17;;:::i;:::-;10495:2;10489:9;10482:5;10475:24;10531:39;10566:2;10562;10558:11;10531:39;:::i;:::-;10526:2;10519:5;10515:14;10508:63;10610:2;10606;10602:11;10596:18;10639:2;10629:8;10626:16;10623:36;;;10655:1;10652;10645:12;10623:36;10691:67;10750:7;10739:8;10735:2;10731:17;10691:67;:::i;:::-;10686:2;10679:5;10675:14;10668:91;;10805:2;10801;10797:11;10791:18;10786:2;10779:5;10775:14;10768:42;10857:3;10853:2;10849:12;10843:19;10837:3;10830:5;10826:15;10819:44;10896:40;10931:3;10927:2;10923:12;10896:40;:::i;:::-;10890:3;10883:5;10879:15;10872:65;10984:3;10980:2;10976:12;10970:19;10964:3;10957:5;10953:15;10946:44;11037:3;11033:2;11029:12;11023:19;11017:3;11010:5;11006:15;10999:44;11062:5;11052:15;;;;;10043:1030;;;;:::o;11433:342::-;11687:25;;;11674:3;11659:19;;11762:6;11754;11749:2;11734:18;;11721:48;11433:342;;;;;:::o;11780:156::-;11846:20;;11906:4;11895:16;;11885:27;;11875:55;;11926:1;11923;11916:12;11941:128;12006:20;;12035:28;12006:20;12035:28;:::i;12074:163::-;12141:20;;12201:10;12190:22;;12180:33;;12170:61;;12227:1;12224;12217:12;12242:1703;12471:20;;12453:39;;12440:3;12425:19;;12521:35;12550:4;12538:17;;12521:35;:::i;:::-;3467:4;3456:16;12611:4;12596:20;;3444:29;12648:34;12676:4;12664:17;;12648:34;:::i;:::-;699:13;692:21;12738:4;12723:20;;680:34;12775;12803:4;12791:17;;12775:34;:::i;:::-;699:13;692:21;12865:4;12850:20;;680:34;12902:35;12931:4;12919:17;;12902:35;:::i;:::-;3467:4;3456:16;12994:4;12979:20;;3444:29;13031:36;13061:4;13049:17;;13031:36;:::i;:::-;3556:10;3545:22;13125:4;13110:20;;3533:35;13194:4;13182:17;;;13169:31;13147:20;;;13140:61;13232:36;13262:4;13250:17;;13232:36;:::i;:::-;-1:-1:-1;;;;;3644:30:63;13326:4;13311:20;;3632:43;13351:6;13388:34;13406:15;;;13388:34;:::i;:::-;-1:-1:-1;;;;;3644:30:63;13465:18;;;3632:43;13503:6;13558:15;;;13545:29;13525:18;;;13518:57;13594:6;13649:15;;;13636:29;13616:18;;;13609:57;13685:6;13740:15;;;13727:29;13707:18;;;13700:57;13776:6;13831:15;;;13818:29;13798:18;;;13791:57;13867:6;13922:15;;;13909:29;13889:18;;;;13882:57;;;;13889:18;12242:1703::o;13950:617::-;14043:6;14074:3;14118:2;14106:9;14097:7;14093:23;14089:32;14086:52;;;14134:1;14131;14124:12;14086:52;14183:7;14176:4;14165:9;14161:20;14157:34;14147:62;;14205:1;14202;14195:12;14147:62;14229:17;;:::i;:::-;14294:18;;;;14268:3;14324:19;;;14321:39;;;14356:1;14353;14346:12;14321:39;14380:9;14398:139;14414:6;14409:3;14406:15;14398:139;;;14482:10;;14470:23;;14522:4;14513:14;;;;14431;14398:139;;;-1:-1:-1;14556:5:63;13950:617;-1:-1:-1;;;;;13950:617:63:o;15205:558::-;15298:6;15351:2;15339:9;15330:7;15326:23;15322:32;15319:52;;;15367:1;15364;15357:12;15319:52;15400:2;15394:9;15442:2;15434:6;15430:15;15511:6;15499:10;15496:22;-1:-1:-1;;;;;15463:10:63;15460:34;15457:62;15454:88;;;15522:18;;:::i;:::-;15562:10;15558:2;15551:22;;15603:9;15597:16;15589:6;15582:32;15668:2;15657:9;15653:18;15647:25;15642:2;15634:6;15630:15;15623:50;15727:2;15716:9;15712:18;15706:25;15701:2;15693:6;15689:15;15682:50;15751:6;15741:16;;;15205:558;;;;:::o",
    "linkReferences": {
      "lib/contracts/contracts/lib/ClaimBuilder.sol": {
        "ClaimBuilder": [
          {
            "start": 2254,
            "length": 20
          }
        ]
      },
      "lib/contracts/contracts/lib/IdentityLib.sol": {
        "IdentityLib": [
          {
            "start": 1176,
            "length": 20
          },
          {
            "start": 1353,
            "length": 20
          },
          {
            "start": 1503,
            "length": 20
          },
          {
            "start": 1654,
            "length": 20
          },
          {
            "start": 1714,
            "length": 20
          },
          {
            "start": 1802,
            "length": 20
          },
          {
            "start": 1881,
            "length": 20
          },
          {
            "start": 1985,
            "length": 20
          },
          {
            "start": 2132,
            "length": 20
          },
          {
            "start": 2406,
            "length": 20
          },
          {
            "start": 2589,
            "length": 20
          },
          {
            "start": 2776,
            "length": 20
          },
          {
            "start": 3029,
            "length": 20
          },
          {
            "start": 3128,
            "length": 20
          },
          {
            "start": 3260,
            "length": 20
          },
          {
            "start": 3598,
            "length": 20
          },
          {
            "start": 3685,
            "length": 20
          },
          {
            "start": 4050,
            "length": 20
          }
        ]
      }
    }
  },
  "methodIdentifiers": {
    "addClaim(uint256[8])": "5aa7396b",
    "addClaimAndTransit(uint256[8])": "412363d3",
    "addClaimHash(uint256,uint256)": "5584b091",
    "addClaimHashAndTransit(uint256,uint256)": "961fc416",
    "buildClaim((uint256,uint8,bool,bool,uint8,uint32,uint256,uint64,uint64,uint256,uint256,uint256,uint256,uint256))": "73c08244",
    "calcIdentityState()": "4ddad0b3",
    "getClaimProof(uint256)": "b57a40cb",
    "getClaimProofByRoot(uint256,uint256)": "310d0d5b",
    "getClaimsTreeRoot()": "3df432fc",
    "getId()": "5d1ca631",
    "getIsOldStateGenesis()": "f84c7c1e",
    "getLatestPublishedClaimsRoot()": "523b8136",
    "getLatestPublishedRevocationsRoot()": "9674cfa4",
    "getLatestPublishedRootsRoot()": "c6365a3b",
    "getLatestPublishedState()": "3d59ec60",
    "getRevocationProof(uint64)": "26485063",
    "getRevocationProofByRoot(uint64,uint256)": "e26ecb0b",
    "getRevocationStatus(uint256,uint64)": "110c96a7",
    "getRevocationStatusByIdAndState(uint256,uint256,uint64)": "aad72921",
    "getRevocationsTreeRoot()": "01c85c77",
    "getRootProof(uint256)": "c1e32733",
    "getRootProofByRoot(uint256,uint256)": "2d5c4f25",
    "getRootsByState(uint256)": "b8db6871",
    "getRootsTreeRoot()": "da68a0b1",
    "getSmtDepth()": "3f0c6648",
    "initialize(address)": "c4d66de8",
    "newClaimData()": "5b9c895d",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "revokeClaim(uint64)": "891eb608",
    "revokeClaimAndTransit(uint64)": "f2a8ed5a",
    "transferOwnership(address)": "f2fde38b",
    "transitState()": "6c87e2fa"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256[8]\",\"name\":\"claim\",\"type\":\"uint256[8]\"}],\"name\":\"addClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[8]\",\"name\":\"claim\",\"type\":\"uint256[8]\"}],\"name\":\"addClaimAndTransit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"hashIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hashValue\",\"type\":\"uint256\"}],\"name\":\"addClaimHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"hashIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hashValue\",\"type\":\"uint256\"}],\"name\":\"addClaimHashAndTransit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"schemaHash\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"idPosition\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"expirable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updatable\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"merklizedRootPosition\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"version\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"revocationNonce\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationDate\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"merklizedRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexDataSlotA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexDataSlotB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueDataSlotA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueDataSlotB\",\"type\":\"uint256\"}],\"internalType\":\"struct ClaimBuilder.ClaimData\",\"name\":\"claimData\",\"type\":\"tuple\"}],\"name\":\"buildClaim\",\"outputs\":[{\"internalType\":\"uint256[8]\",\"name\":\"\",\"type\":\"uint256[8]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calcIdentityState\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimIndexHash\",\"type\":\"uint256\"}],\"name\":\"getClaimProof\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"existence\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"siblings\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"auxExistence\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"auxIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auxValue\",\"type\":\"uint256\"}],\"internalType\":\"struct SmtLib.Proof\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimIndexHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"}],\"name\":\"getClaimProofByRoot\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"existence\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"siblings\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"auxExistence\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"auxIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auxValue\",\"type\":\"uint256\"}],\"internalType\":\"struct SmtLib.Proof\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimsTreeRoot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIsOldStateGenesis\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPublishedClaimsRoot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPublishedRevocationsRoot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPublishedRootsRoot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPublishedState\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"revocationNonce\",\"type\":\"uint64\"}],\"name\":\"getRevocationProof\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"existence\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"siblings\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"auxExistence\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"auxIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auxValue\",\"type\":\"uint256\"}],\"internalType\":\"struct SmtLib.Proof\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"revocationNonce\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"}],\"name\":\"getRevocationProofByRoot\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"existence\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"siblings\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"auxExistence\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"auxIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auxValue\",\"type\":\"uint256\"}],\"internalType\":\"struct SmtLib.Proof\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"getRevocationStatus\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"state\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimsTreeRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revocationTreeRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rootOfRoots\",\"type\":\"uint256\"}],\"internalType\":\"struct IOnchainCredentialStatusResolver.IdentityStateRoots\",\"name\":\"issuer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"existence\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"siblings\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"auxExistence\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"auxIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auxValue\",\"type\":\"uint256\"}],\"internalType\":\"struct IOnchainCredentialStatusResolver.Proof\",\"name\":\"mtp\",\"type\":\"tuple\"}],\"internalType\":\"struct IOnchainCredentialStatusResolver.CredentialStatus\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"state\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"getRevocationStatusByIdAndState\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"state\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimsTreeRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revocationTreeRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rootOfRoots\",\"type\":\"uint256\"}],\"internalType\":\"struct IOnchainCredentialStatusResolver.IdentityStateRoots\",\"name\":\"issuer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"existence\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"siblings\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"auxExistence\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"auxIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auxValue\",\"type\":\"uint256\"}],\"internalType\":\"struct IOnchainCredentialStatusResolver.Proof\",\"name\":\"mtp\",\"type\":\"tuple\"}],\"internalType\":\"struct IOnchainCredentialStatusResolver.CredentialStatus\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRevocationsTreeRoot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimsTreeRoot\",\"type\":\"uint256\"}],\"name\":\"getRootProof\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"existence\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"siblings\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"auxExistence\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"auxIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auxValue\",\"type\":\"uint256\"}],\"internalType\":\"struct SmtLib.Proof\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimsTreeRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"}],\"name\":\"getRootProofByRoot\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"existence\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"siblings\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"auxExistence\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"auxIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auxValue\",\"type\":\"uint256\"}],\"internalType\":\"struct SmtLib.Proof\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"state\",\"type\":\"uint256\"}],\"name\":\"getRootsByState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"claimsRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revocationsRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rootsRoot\",\"type\":\"uint256\"}],\"internalType\":\"struct IdentityLib.Roots\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRootsTreeRoot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSmtDepth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stateContractAddr\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newClaimData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"schemaHash\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"idPosition\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"expirable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updatable\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"merklizedRootPosition\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"version\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"revocationNonce\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationDate\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"merklizedRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexDataSlotA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexDataSlotB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueDataSlotA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueDataSlotB\",\"type\":\"uint256\"}],\"internalType\":\"struct ClaimBuilder.ClaimData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"revocationNonce\",\"type\":\"uint64\"}],\"name\":\"revokeClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"revocationNonce\",\"type\":\"uint64\"}],\"name\":\"revokeClaimAndTransit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transitState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256[8])\":{\"details\":\"Add claim\",\"params\":{\"claim\":\"- claim data\"}},\"addClaimHash(uint256,uint256)\":{\"details\":\"Add claim hash\",\"params\":{\"hashIndex\":\"- hash of claim index part\",\"hashValue\":\"- hash of claim value part\"}},\"buildClaim((uint256,uint8,bool,bool,uint8,uint32,uint256,uint64,uint64,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"Builds claim\",\"params\":{\"claimData\":\"- claim data\"},\"returns\":{\"_0\":\"binary claim\"}},\"calcIdentityState()\":{\"details\":\"Calculate IdentityState\",\"returns\":{\"_0\":\"IdentityState\"}},\"getClaimProof(uint256)\":{\"details\":\"Retrieve Claim inclusion or non-inclusion proof for a given claim index.\",\"params\":{\"claimIndexHash\":\"- hash of Claim Index\"},\"returns\":{\"_0\":\"The ClaimsTree inclusion or non-inclusion proof for the claim\"}},\"getClaimProofByRoot(uint256,uint256)\":{\"details\":\"Retrieve Claim inclusion or non-inclusion proof for a given claim index by target root.\",\"params\":{\"claimIndexHash\":\"- hash of Claim Index\",\"root\":\"- root of the tree\"},\"returns\":{\"_0\":\"The ClaimsTree inclusion or non-inclusion proof for the claim\"}},\"getClaimsTreeRoot()\":{\"details\":\"Retrieve ClaimsTree latest root.\",\"returns\":{\"_0\":\"The latest ClaimsTree root\"}},\"getId()\":{\"details\":\"returns identity Id\",\"returns\":{\"_0\":\"uint256 Id\"}},\"getIsOldStateGenesis()\":{\"details\":\"returns isOldStateGenesis flag\",\"returns\":{\"_0\":\"bool isOldStateGenesis\"}},\"getLatestPublishedClaimsRoot()\":{\"details\":\"returns latest published claims tree root\",\"returns\":{\"_0\":\"claimsRoot\"}},\"getLatestPublishedRevocationsRoot()\":{\"details\":\"returns latest published revocation tree root\",\"returns\":{\"_0\":\"revocationsRoot\"}},\"getLatestPublishedRootsRoot()\":{\"details\":\"returns latest published roots tree root\",\"returns\":{\"_0\":\"rootsRoot\"}},\"getLatestPublishedState()\":{\"details\":\"returns identity latest state\",\"returns\":{\"_0\":\"uint256 identityLatestState\"}},\"getRevocationProof(uint64)\":{\"details\":\"Retrieve inclusion or non-inclusion proof for a given revocation nonce.\",\"params\":{\"revocationNonce\":\"- revocation nonce\"},\"returns\":{\"_0\":\"The RevocationsTree inclusion or non-inclusion proof for the revocation nonce\"}},\"getRevocationProofByRoot(uint64,uint256)\":{\"details\":\"Retrieve inclusion or non-inclusion proof for a given revocation nonce by target root.\",\"params\":{\"revocationNonce\":\"- revocation nonce\",\"root\":\"- root of the tree\"},\"returns\":{\"_0\":\"The RevocationsTree inclusion or non-inclusion proof for the revocation nonce\"}},\"getRevocationStatus(uint256,uint64)\":{\"details\":\"returns revocation status of a claim using given revocation nonce\",\"params\":{\"id\":\"Issuer's identifier\",\"nonce\":\"Revocation nonce\"},\"returns\":{\"_0\":\"CredentialStatus\"}},\"getRevocationStatusByIdAndState(uint256,uint256,uint64)\":{\"details\":\"returns revocation status of a claim using given revocation nonce, id and state\",\"params\":{\"id\":\"Issuer's identifier\",\"nonce\":\"Revocation nonce\",\"state\":\"of the Issuer\"},\"returns\":{\"_0\":\"CredentialStatus\"}},\"getRevocationsTreeRoot()\":{\"details\":\"Retrieve RevocationsTree latest root.\",\"returns\":{\"_0\":\"The latest RevocationsTree root\"}},\"getRootProof(uint256)\":{\"details\":\"Retrieve inclusion or non-inclusion proof for a given claimsTreeRoot.\",\"params\":{\"claimsTreeRoot\":\"- claims tree root\"},\"returns\":{\"_0\":\"The RootsTree inclusion or non-inclusion proof for the claim tree root\"}},\"getRootProofByRoot(uint256,uint256)\":{\"details\":\"Retrieve inclusion or non-inclusion proof for a given claimsTreeRoot by target root.\",\"params\":{\"claimsTreeRoot\":\"- claims tree root\",\"root\":\"- root of the tree\"},\"returns\":{\"_0\":\"The RootsTree inclusion or non-inclusion proof for the claim tree root\"}},\"getRootsByState(uint256)\":{\"details\":\"returns historical claimsTree roots, revocationsTree roots, rootsTree roots by state\",\"params\":{\"state\":\"identity state\"},\"returns\":{\"_0\":\"set of roots\"}},\"getRootsTreeRoot()\":{\"details\":\"Retrieve RootsTree latest root.\",\"returns\":{\"_0\":\"The latest RootsTree root\"}},\"getSmtDepth()\":{\"details\":\"Get configured Identity SMT depth.\",\"returns\":{\"_0\":\"depth of the SMT\"}},\"initialize(address)\":{\"details\":\"Initialization of IdentityLib library\",\"params\":{\"_stateContractAddr\":\"- address of the State contract\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revokeClaim(uint64)\":{\"details\":\"Revoke claim using it's revocationNonce\",\"params\":{\"revocationNonce\":\"- revocation nonce\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transitState()\":{\"details\":\"Make state transition\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/IdentityExample.sol\":\"IdentityExample\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":iden3/=lib/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/\"]},\"sources\":{\"lib/contracts/contracts/interfaces/IOnchainCredentialStatusResolver.sol\":{\"keccak256\":\"0xa8bf3f6d7ebb32aa7df9118e186b5292c2b60f3ffd9094377e8d095e8dbbc163\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a311293fe51118944eb5e86ca3abe5317020f4f47e68713e38d7929b8f6f47eb\",\"dweb:/ipfs/QmUMwCFLPnEwudfyf3qKVjhRVRTxaKef1DbSKBJvp8WT7f\"]},\"lib/contracts/contracts/interfaces/IState.sol\":{\"keccak256\":\"0xbc964a59c9fac3ebbe4ddb73f6afccf82667d73c53a236723661dd13b43c0678\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://de8ff59c76ffda3f0ac1958f9bf1744f6b4cd351609fcc3c4cd9e14a30fdffb8\",\"dweb:/ipfs/QmeRD6owEQwbexPFP4w6B4C1XyXMe2aYrnArWwz78HdqoR\"]},\"lib/contracts/contracts/lib/ArrayUtils.sol\":{\"keccak256\":\"0xc38d68e807793bdd354a25653f76e9e529ca012c1b2bb527ad05ad01ad4499d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bf76c090c5c1a41ef844613c4a4dd74893195cd9c9b83ff53dec4cd61a4ad7d1\",\"dweb:/ipfs/QmQFPARLCq5M8xWxZtPC5LHPSrWQc168DHc5Svjv3vHGwW\"]},\"lib/contracts/contracts/lib/ClaimBuilder.sol\":{\"keccak256\":\"0xa967c6a0c3d164240f4cbf537c614b0aabee28b4d622779e50daedf290cfe5c2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d538b0b89eca6d948d337fe4775e196dc0a12185caab3cfc8804142c148a08d8\",\"dweb:/ipfs/QmekRw4RJCgK4sdc5UDhjvFyURv23QB8eWmNzuguQ4vfX5\"]},\"lib/contracts/contracts/lib/GenesisUtils.sol\":{\"keccak256\":\"0x74927e2171f808fb95d380cde49836e51bd5ec7a13597593ca9a3b2311b71f1a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20b36745989115c64f0d312a24011ef9fbfbd5124808f28d5784efa112b20ad8\",\"dweb:/ipfs/Qmdagk4wAm1X3MqPjEmFN51QovAzg5LynH4G93bzcaV23d\"]},\"lib/contracts/contracts/lib/IdentityBase.sol\":{\"keccak256\":\"0x519c91a8f395bfe046ffbecf1f9ac5082e2970269f1663e5337928c313e1b8ec\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c915f6e734adfde3169fe21ce26d1ed00290a09c2072b861b0b312c92b640854\",\"dweb:/ipfs/QmaGibC7gBfPc5TiydyoUBJdtMGj6zkqrALhAYaxnjxkSu\"]},\"lib/contracts/contracts/lib/IdentityLib.sol\":{\"keccak256\":\"0x986862a923ab30d0e66f9e44c723ea1cca5056d9048f1b4ed89eea8c5c7da02a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b122949ca73b0ca09568b9f79259e739a2d17ced7277cde541f39e9f791e77fd\",\"dweb:/ipfs/QmUxx4GGZEGbbyxohNJwY8KfeBkjQRe1BAgH8AzEcgG6Dn\"]},\"lib/contracts/contracts/lib/Poseidon.sol\":{\"keccak256\":\"0x69d6e4fc8d754fb05ceabd588521aa69d842bc82fdf916bba918228cfde87d60\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e7b30057958783a4a2b51bdc50646561f68f425ac0c99f775a0d4255917e4d36\",\"dweb:/ipfs/Qmd5mdQUSiUvfeUsBPqLsDKkADb1bu3Rbc1zjZNij1vcLN\"]},\"lib/contracts/contracts/lib/PrimitiveTypeUtils.sol\":{\"keccak256\":\"0xea533085f37f4688dd53b0507cbc4d14f126dd5a44628fea1af57acbd6f84bb5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a595507fceea363d721e26a3bb9100f4948b1c1da8967d2652b072ec1420d6f0\",\"dweb:/ipfs/QmcWYkWjA7QQfiw9BZv2YXq4i47tsijs1JFofSmpGN4qZF\"]},\"lib/contracts/contracts/lib/SmtLib.sol\":{\"keccak256\":\"0x19086e7f2f7329d2c8779ad6540eedd8838560c56966873608e657fccbef9dd2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a5c5725be39cbbefc243a8821af2485d4111a6e860b6c62777c448f0c25165ec\",\"dweb:/ipfs/QmTVjXxqGFTfn1GinpSLUfYG3jWX4wxoJKXf6jN66WMK34\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]},\"lib/solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]},\"src/IdentityExample.sol\":{\"keccak256\":\"0xad389ae4698f1f4d5d31e0e4e2de4d77ed83899529b6e4940fb1885c21d88fb4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2a8e87274dc8eded9066c1945e4db86542d6e2632fdb4f21652707c3c0eccf43\",\"dweb:/ipfs/QmY8aLdxid8QSe2DhKCD63nc4uswLiEwVw1EmcHahVotz7\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInitialization"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInitializing"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[8]",
              "name": "claim",
              "type": "uint256[8]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addClaim"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[8]",
              "name": "claim",
              "type": "uint256[8]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addClaimAndTransit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "hashIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hashValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addClaimHash"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "hashIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hashValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addClaimHashAndTransit"
        },
        {
          "inputs": [
            {
              "internalType": "struct ClaimBuilder.ClaimData",
              "name": "claimData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "schemaHash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "idPosition",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "expirable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "updatable",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "merklizedRootPosition",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "version",
                  "type": "uint32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationNonce",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationDate",
                  "type": "uint64"
                },
                {
                  "internalType": "uint256",
                  "name": "merklizedRoot",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "indexDataSlotA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "indexDataSlotB",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valueDataSlotA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valueDataSlotB",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "buildClaim",
          "outputs": [
            {
              "internalType": "uint256[8]",
              "name": "",
              "type": "uint256[8]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "calcIdentityState",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimIndexHash",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimProof",
          "outputs": [
            {
              "internalType": "struct SmtLib.Proof",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "root",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "existence",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "siblings",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "auxExistence",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "auxIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "auxValue",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimIndexHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimProofByRoot",
          "outputs": [
            {
              "internalType": "struct SmtLib.Proof",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "root",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "existence",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "siblings",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "auxExistence",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "auxIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "auxValue",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimsTreeRoot",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getIsOldStateGenesis",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestPublishedClaimsRoot",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestPublishedRevocationsRoot",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestPublishedRootsRoot",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestPublishedState",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "revocationNonce",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRevocationProof",
          "outputs": [
            {
              "internalType": "struct SmtLib.Proof",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "root",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "existence",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "siblings",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "auxExistence",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "auxIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "auxValue",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "revocationNonce",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRevocationProofByRoot",
          "outputs": [
            {
              "internalType": "struct SmtLib.Proof",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "root",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "existence",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "siblings",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "auxExistence",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "auxIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "auxValue",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRevocationStatus",
          "outputs": [
            {
              "internalType": "struct IOnchainCredentialStatusResolver.CredentialStatus",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IOnchainCredentialStatusResolver.IdentityStateRoots",
                  "name": "issuer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "state",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "claimsTreeRoot",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "revocationTreeRoot",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rootOfRoots",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct IOnchainCredentialStatusResolver.Proof",
                  "name": "mtp",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "root",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "existence",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "siblings",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "auxExistence",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "auxIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "auxValue",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "state",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRevocationStatusByIdAndState",
          "outputs": [
            {
              "internalType": "struct IOnchainCredentialStatusResolver.CredentialStatus",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IOnchainCredentialStatusResolver.IdentityStateRoots",
                  "name": "issuer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "state",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "claimsTreeRoot",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "revocationTreeRoot",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rootOfRoots",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct IOnchainCredentialStatusResolver.Proof",
                  "name": "mtp",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "root",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "existence",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "siblings",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "auxExistence",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "auxIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "auxValue",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRevocationsTreeRoot",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimsTreeRoot",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRootProof",
          "outputs": [
            {
              "internalType": "struct SmtLib.Proof",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "root",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "existence",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "siblings",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "auxExistence",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "auxIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "auxValue",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimsTreeRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRootProofByRoot",
          "outputs": [
            {
              "internalType": "struct SmtLib.Proof",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "root",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "existence",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "siblings",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "auxExistence",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "auxIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "auxValue",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "state",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRootsByState",
          "outputs": [
            {
              "internalType": "struct IdentityLib.Roots",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "claimsRoot",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "revocationsRoot",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rootsRoot",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRootsTreeRoot",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getSmtDepth",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_stateContractAddr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "newClaimData",
          "outputs": [
            {
              "internalType": "struct ClaimBuilder.ClaimData",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "schemaHash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "idPosition",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "expirable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "updatable",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "merklizedRootPosition",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "version",
                  "type": "uint32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationNonce",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationDate",
                  "type": "uint64"
                },
                {
                  "internalType": "uint256",
                  "name": "merklizedRoot",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "indexDataSlotA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "indexDataSlotB",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valueDataSlotA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valueDataSlotB",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "revocationNonce",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeClaim"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "revocationNonce",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeClaimAndTransit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transitState"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addClaim(uint256[8])": {
            "details": "Add claim",
            "params": {
              "claim": "- claim data"
            }
          },
          "addClaimHash(uint256,uint256)": {
            "details": "Add claim hash",
            "params": {
              "hashIndex": "- hash of claim index part",
              "hashValue": "- hash of claim value part"
            }
          },
          "buildClaim((uint256,uint8,bool,bool,uint8,uint32,uint256,uint64,uint64,uint256,uint256,uint256,uint256,uint256))": {
            "details": "Builds claim",
            "params": {
              "claimData": "- claim data"
            },
            "returns": {
              "_0": "binary claim"
            }
          },
          "calcIdentityState()": {
            "details": "Calculate IdentityState",
            "returns": {
              "_0": "IdentityState"
            }
          },
          "getClaimProof(uint256)": {
            "details": "Retrieve Claim inclusion or non-inclusion proof for a given claim index.",
            "params": {
              "claimIndexHash": "- hash of Claim Index"
            },
            "returns": {
              "_0": "The ClaimsTree inclusion or non-inclusion proof for the claim"
            }
          },
          "getClaimProofByRoot(uint256,uint256)": {
            "details": "Retrieve Claim inclusion or non-inclusion proof for a given claim index by target root.",
            "params": {
              "claimIndexHash": "- hash of Claim Index",
              "root": "- root of the tree"
            },
            "returns": {
              "_0": "The ClaimsTree inclusion or non-inclusion proof for the claim"
            }
          },
          "getClaimsTreeRoot()": {
            "details": "Retrieve ClaimsTree latest root.",
            "returns": {
              "_0": "The latest ClaimsTree root"
            }
          },
          "getId()": {
            "details": "returns identity Id",
            "returns": {
              "_0": "uint256 Id"
            }
          },
          "getIsOldStateGenesis()": {
            "details": "returns isOldStateGenesis flag",
            "returns": {
              "_0": "bool isOldStateGenesis"
            }
          },
          "getLatestPublishedClaimsRoot()": {
            "details": "returns latest published claims tree root",
            "returns": {
              "_0": "claimsRoot"
            }
          },
          "getLatestPublishedRevocationsRoot()": {
            "details": "returns latest published revocation tree root",
            "returns": {
              "_0": "revocationsRoot"
            }
          },
          "getLatestPublishedRootsRoot()": {
            "details": "returns latest published roots tree root",
            "returns": {
              "_0": "rootsRoot"
            }
          },
          "getLatestPublishedState()": {
            "details": "returns identity latest state",
            "returns": {
              "_0": "uint256 identityLatestState"
            }
          },
          "getRevocationProof(uint64)": {
            "details": "Retrieve inclusion or non-inclusion proof for a given revocation nonce.",
            "params": {
              "revocationNonce": "- revocation nonce"
            },
            "returns": {
              "_0": "The RevocationsTree inclusion or non-inclusion proof for the revocation nonce"
            }
          },
          "getRevocationProofByRoot(uint64,uint256)": {
            "details": "Retrieve inclusion or non-inclusion proof for a given revocation nonce by target root.",
            "params": {
              "revocationNonce": "- revocation nonce",
              "root": "- root of the tree"
            },
            "returns": {
              "_0": "The RevocationsTree inclusion or non-inclusion proof for the revocation nonce"
            }
          },
          "getRevocationStatus(uint256,uint64)": {
            "details": "returns revocation status of a claim using given revocation nonce",
            "params": {
              "id": "Issuer's identifier",
              "nonce": "Revocation nonce"
            },
            "returns": {
              "_0": "CredentialStatus"
            }
          },
          "getRevocationStatusByIdAndState(uint256,uint256,uint64)": {
            "details": "returns revocation status of a claim using given revocation nonce, id and state",
            "params": {
              "id": "Issuer's identifier",
              "nonce": "Revocation nonce",
              "state": "of the Issuer"
            },
            "returns": {
              "_0": "CredentialStatus"
            }
          },
          "getRevocationsTreeRoot()": {
            "details": "Retrieve RevocationsTree latest root.",
            "returns": {
              "_0": "The latest RevocationsTree root"
            }
          },
          "getRootProof(uint256)": {
            "details": "Retrieve inclusion or non-inclusion proof for a given claimsTreeRoot.",
            "params": {
              "claimsTreeRoot": "- claims tree root"
            },
            "returns": {
              "_0": "The RootsTree inclusion or non-inclusion proof for the claim tree root"
            }
          },
          "getRootProofByRoot(uint256,uint256)": {
            "details": "Retrieve inclusion or non-inclusion proof for a given claimsTreeRoot by target root.",
            "params": {
              "claimsTreeRoot": "- claims tree root",
              "root": "- root of the tree"
            },
            "returns": {
              "_0": "The RootsTree inclusion or non-inclusion proof for the claim tree root"
            }
          },
          "getRootsByState(uint256)": {
            "details": "returns historical claimsTree roots, revocationsTree roots, rootsTree roots by state",
            "params": {
              "state": "identity state"
            },
            "returns": {
              "_0": "set of roots"
            }
          },
          "getRootsTreeRoot()": {
            "details": "Retrieve RootsTree latest root.",
            "returns": {
              "_0": "The latest RootsTree root"
            }
          },
          "getSmtDepth()": {
            "details": "Get configured Identity SMT depth.",
            "returns": {
              "_0": "depth of the SMT"
            }
          },
          "initialize(address)": {
            "details": "Initialization of IdentityLib library",
            "params": {
              "_stateContractAddr": "- address of the State contract"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "revokeClaim(uint64)": {
            "details": "Revoke claim using it's revocationNonce",
            "params": {
              "revocationNonce": "- revocation nonce"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "transitState()": {
            "details": "Make state transition"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "account-abstraction/=lib/account-abstraction/contracts/",
        "chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "iden3/=lib/contracts/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "solidity-bytes-utils/=lib/solidity-bytes-utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/IdentityExample.sol": "IdentityExample"
      },
      "libraries": {}
    },
    "sources": {
      "lib/contracts/contracts/interfaces/IOnchainCredentialStatusResolver.sol": {
        "keccak256": "0xa8bf3f6d7ebb32aa7df9118e186b5292c2b60f3ffd9094377e8d095e8dbbc163",
        "urls": [
          "bzz-raw://a311293fe51118944eb5e86ca3abe5317020f4f47e68713e38d7929b8f6f47eb",
          "dweb:/ipfs/QmUMwCFLPnEwudfyf3qKVjhRVRTxaKef1DbSKBJvp8WT7f"
        ],
        "license": "GPL-3.0"
      },
      "lib/contracts/contracts/interfaces/IState.sol": {
        "keccak256": "0xbc964a59c9fac3ebbe4ddb73f6afccf82667d73c53a236723661dd13b43c0678",
        "urls": [
          "bzz-raw://de8ff59c76ffda3f0ac1958f9bf1744f6b4cd351609fcc3c4cd9e14a30fdffb8",
          "dweb:/ipfs/QmeRD6owEQwbexPFP4w6B4C1XyXMe2aYrnArWwz78HdqoR"
        ],
        "license": "GPL-3.0"
      },
      "lib/contracts/contracts/lib/ArrayUtils.sol": {
        "keccak256": "0xc38d68e807793bdd354a25653f76e9e529ca012c1b2bb527ad05ad01ad4499d6",
        "urls": [
          "bzz-raw://bf76c090c5c1a41ef844613c4a4dd74893195cd9c9b83ff53dec4cd61a4ad7d1",
          "dweb:/ipfs/QmQFPARLCq5M8xWxZtPC5LHPSrWQc168DHc5Svjv3vHGwW"
        ],
        "license": "GPL-3.0"
      },
      "lib/contracts/contracts/lib/ClaimBuilder.sol": {
        "keccak256": "0xa967c6a0c3d164240f4cbf537c614b0aabee28b4d622779e50daedf290cfe5c2",
        "urls": [
          "bzz-raw://d538b0b89eca6d948d337fe4775e196dc0a12185caab3cfc8804142c148a08d8",
          "dweb:/ipfs/QmekRw4RJCgK4sdc5UDhjvFyURv23QB8eWmNzuguQ4vfX5"
        ],
        "license": "GPL-3.0"
      },
      "lib/contracts/contracts/lib/GenesisUtils.sol": {
        "keccak256": "0x74927e2171f808fb95d380cde49836e51bd5ec7a13597593ca9a3b2311b71f1a",
        "urls": [
          "bzz-raw://20b36745989115c64f0d312a24011ef9fbfbd5124808f28d5784efa112b20ad8",
          "dweb:/ipfs/Qmdagk4wAm1X3MqPjEmFN51QovAzg5LynH4G93bzcaV23d"
        ],
        "license": "GPL-3.0"
      },
      "lib/contracts/contracts/lib/IdentityBase.sol": {
        "keccak256": "0x519c91a8f395bfe046ffbecf1f9ac5082e2970269f1663e5337928c313e1b8ec",
        "urls": [
          "bzz-raw://c915f6e734adfde3169fe21ce26d1ed00290a09c2072b861b0b312c92b640854",
          "dweb:/ipfs/QmaGibC7gBfPc5TiydyoUBJdtMGj6zkqrALhAYaxnjxkSu"
        ],
        "license": "GPL-3.0"
      },
      "lib/contracts/contracts/lib/IdentityLib.sol": {
        "keccak256": "0x986862a923ab30d0e66f9e44c723ea1cca5056d9048f1b4ed89eea8c5c7da02a",
        "urls": [
          "bzz-raw://b122949ca73b0ca09568b9f79259e739a2d17ced7277cde541f39e9f791e77fd",
          "dweb:/ipfs/QmUxx4GGZEGbbyxohNJwY8KfeBkjQRe1BAgH8AzEcgG6Dn"
        ],
        "license": "GPL-3.0"
      },
      "lib/contracts/contracts/lib/Poseidon.sol": {
        "keccak256": "0x69d6e4fc8d754fb05ceabd588521aa69d842bc82fdf916bba918228cfde87d60",
        "urls": [
          "bzz-raw://e7b30057958783a4a2b51bdc50646561f68f425ac0c99f775a0d4255917e4d36",
          "dweb:/ipfs/Qmd5mdQUSiUvfeUsBPqLsDKkADb1bu3Rbc1zjZNij1vcLN"
        ],
        "license": "GPL-3.0"
      },
      "lib/contracts/contracts/lib/PrimitiveTypeUtils.sol": {
        "keccak256": "0xea533085f37f4688dd53b0507cbc4d14f126dd5a44628fea1af57acbd6f84bb5",
        "urls": [
          "bzz-raw://a595507fceea363d721e26a3bb9100f4948b1c1da8967d2652b072ec1420d6f0",
          "dweb:/ipfs/QmcWYkWjA7QQfiw9BZv2YXq4i47tsijs1JFofSmpGN4qZF"
        ],
        "license": "GPL-3.0"
      },
      "lib/contracts/contracts/lib/SmtLib.sol": {
        "keccak256": "0x19086e7f2f7329d2c8779ad6540eedd8838560c56966873608e657fccbef9dd2",
        "urls": [
          "bzz-raw://a5c5725be39cbbefc243a8821af2485d4111a6e860b6c62777c448f0c25165ec",
          "dweb:/ipfs/QmTVjXxqGFTfn1GinpSLUfYG3jWX4wxoJKXf6jN66WMK34"
        ],
        "license": "GPL-3.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c",
        "urls": [
          "bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b",
          "dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE"
        ],
        "license": "MIT"
      },
      "lib/solidity-bytes-utils/contracts/BytesLib.sol": {
        "keccak256": "0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29",
        "urls": [
          "bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014",
          "dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn"
        ],
        "license": "Unlicense"
      },
      "src/IdentityExample.sol": {
        "keccak256": "0xad389ae4698f1f4d5d31e0e4e2de4d77ed83899529b6e4940fb1885c21d88fb4",
        "urls": [
          "bzz-raw://2a8e87274dc8eded9066c1945e4db86542d6e2632fdb4f21652707c3c0eccf43",
          "dweb:/ipfs/QmY8aLdxid8QSe2DhKCD63nc4uswLiEwVw1EmcHahVotz7"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/IdentityExample.sol",
    "id": 52309,
    "exportedSymbols": {
      "ClaimBuilder": [
        1756
      ],
      "IState": [
        1257
      ],
      "IdentityBase": [
        2332
      ],
      "IdentityExample": [
        52308
      ],
      "IdentityLib": [
        3081
      ],
      "OwnableUpgradeable": [
        48978
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:3412:59",
    "nodes": [
      {
        "id": 52110,
        "nodeType": "PragmaDirective",
        "src": "37:24:59",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".23"
        ]
      },
      {
        "id": 52112,
        "nodeType": "ImportDirective",
        "src": "65:101:59",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52309,
        "sourceUnit": 48979,
        "symbolAliases": [
          {
            "foreign": {
              "id": 52111,
              "name": "OwnableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48978,
              "src": "73:18:59",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 52114,
        "nodeType": "ImportDirective",
        "src": "168:61:59",
        "nodes": [],
        "absolutePath": "lib/contracts/contracts/interfaces/IState.sol",
        "file": "iden3/contracts/interfaces/IState.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52309,
        "sourceUnit": 1258,
        "symbolAliases": [
          {
            "foreign": {
              "id": 52113,
              "name": "IState",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1257,
              "src": "176:6:59",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 52116,
        "nodeType": "ImportDirective",
        "src": "231:66:59",
        "nodes": [],
        "absolutePath": "lib/contracts/contracts/lib/ClaimBuilder.sol",
        "file": "iden3/contracts/lib/ClaimBuilder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52309,
        "sourceUnit": 1757,
        "symbolAliases": [
          {
            "foreign": {
              "id": 52115,
              "name": "ClaimBuilder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1756,
              "src": "239:12:59",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 52118,
        "nodeType": "ImportDirective",
        "src": "299:64:59",
        "nodes": [],
        "absolutePath": "lib/contracts/contracts/lib/IdentityLib.sol",
        "file": "iden3/contracts/lib/IdentityLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52309,
        "sourceUnit": 3082,
        "symbolAliases": [
          {
            "foreign": {
              "id": 52117,
              "name": "IdentityLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3081,
              "src": "307:11:59",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 52120,
        "nodeType": "ImportDirective",
        "src": "365:66:59",
        "nodes": [],
        "absolutePath": "lib/contracts/contracts/lib/IdentityBase.sol",
        "file": "iden3/contracts/lib/IdentityBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52309,
        "sourceUnit": 2333,
        "symbolAliases": [
          {
            "foreign": {
              "id": 52119,
              "name": "IdentityBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2332,
              "src": "373:12:59",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 52308,
        "nodeType": "ContractDefinition",
        "src": "498:2951:59",
        "nodes": [
          {
            "id": 52128,
            "nodeType": "UsingForDirective",
            "src": "566:39:59",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 52125,
              "name": "IdentityLib",
              "nameLocations": [
                "572:11:59"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3081,
              "src": "572:11:59"
            },
            "typeName": {
              "id": 52127,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 52126,
                "name": "IdentityLib.Data",
                "nameLocations": [
                  "588:11:59",
                  "600:4:59"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2376,
                "src": "588:16:59"
              },
              "referencedDeclaration": 2376,
              "src": "588:16:59",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Data_$2376_storage_ptr",
                "typeString": "struct IdentityLib.Data"
              }
            }
          },
          {
            "id": 52132,
            "nodeType": "VariableDeclaration",
            "src": "1179:26:59",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1200:5:59",
            "scope": 52308,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$500_storage",
              "typeString": "uint256[500]"
            },
            "typeName": {
              "baseType": {
                "id": 52129,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1179:7:59",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 52131,
              "length": {
                "hexValue": "353030",
                "id": 52130,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1187:3:59",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_500_by_1",
                  "typeString": "int_const 500"
                },
                "value": "500"
              },
              "nodeType": "ArrayTypeName",
              "src": "1179:12:59",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$500_storage_ptr",
                "typeString": "uint256[500]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 52152,
            "nodeType": "FunctionDefinition",
            "src": "1214:168:59",
            "nodes": [],
            "body": {
              "id": 52151,
              "nodeType": "Block",
              "src": "1290:92:59",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52143,
                        "name": "_stateContractAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52134,
                        "src": "1318:18:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 52140,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1301:5:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_IdentityExample_$52308_$",
                          "typeString": "type(contract super IdentityExample)"
                        }
                      },
                      "id": 52142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1307:10:59",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2014,
                      "src": "1301:16:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 52144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1301:36:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52145,
                  "nodeType": "ExpressionStatement",
                  "src": "1301:36:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 52147,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1363:3:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 52148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1367:6:59",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1363:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 52146,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48838,
                      "src": "1348:14:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 52149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1348:26:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52150,
                  "nodeType": "ExpressionStatement",
                  "src": "1348:26:59"
                }
              ]
            },
            "baseFunctions": [
              2014
            ],
            "functionSelector": "c4d66de8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 52138,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 52137,
                  "name": "initializer",
                  "nameLocations": [
                    "1278:11:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49086,
                  "src": "1278:11:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "1278:11:59"
              }
            ],
            "name": "initialize",
            "nameLocation": "1223:10:59",
            "overrides": {
              "id": 52136,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1269:8:59"
            },
            "parameters": {
              "id": 52135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52134,
                  "mutability": "mutable",
                  "name": "_stateContractAddr",
                  "nameLocation": "1242:18:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 52152,
                  "src": "1234:26:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1234:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1233:28:59"
            },
            "returnParameters": {
              "id": 52139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1290:0:59"
            },
            "scope": 52308,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52169,
            "nodeType": "FunctionDefinition",
            "src": "1390:131:59",
            "nodes": [],
            "body": {
              "id": 52168,
              "nodeType": "Block",
              "src": "1462:59:59",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52162,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52156,
                        "src": "1482:5:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                          "typeString": "uint256[8] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                          "typeString": "uint256[8] calldata"
                        }
                      ],
                      "id": 52161,
                      "name": "addClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52219,
                      "src": "1473:8:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$8_calldata_ptr_$returns$__$",
                        "typeString": "function (uint256[8] calldata)"
                      }
                    },
                    "id": 52163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1473:15:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52164,
                  "nodeType": "ExpressionStatement",
                  "src": "1473:15:59"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 52165,
                      "name": "transitState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52264,
                      "src": "1499:12:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 52166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1499:14:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52167,
                  "nodeType": "ExpressionStatement",
                  "src": "1499:14:59"
                }
              ]
            },
            "functionSelector": "412363d3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 52159,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 52158,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1452:9:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48873,
                  "src": "1452:9:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "1452:9:59"
              }
            ],
            "name": "addClaimAndTransit",
            "nameLocation": "1399:18:59",
            "parameters": {
              "id": 52157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52156,
                  "mutability": "mutable",
                  "name": "claim",
                  "nameLocation": "1438:5:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 52169,
                  "src": "1418:25:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                    "typeString": "uint256[8]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 52153,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1418:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 52155,
                    "length": {
                      "hexValue": "38",
                      "id": 52154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1426:1:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8_by_1",
                        "typeString": "int_const 8"
                      },
                      "value": "8"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1418:10:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$8_storage_ptr",
                      "typeString": "uint256[8]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1417:27:59"
            },
            "returnParameters": {
              "id": 52160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1462:0:59"
            },
            "scope": 52308,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52187,
            "nodeType": "FunctionDefinition",
            "src": "1529:165:59",
            "nodes": [],
            "body": {
              "id": 52186,
              "nodeType": "Block",
              "src": "1616:78:59",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52179,
                        "name": "hashIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52171,
                        "src": "1640:9:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 52180,
                        "name": "hashValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52173,
                        "src": "1651:9:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 52178,
                      "name": "addClaimHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52237,
                      "src": "1627:12:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 52181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1627:34:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52182,
                  "nodeType": "ExpressionStatement",
                  "src": "1627:34:59"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 52183,
                      "name": "transitState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52264,
                      "src": "1672:12:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 52184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1672:14:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52185,
                  "nodeType": "ExpressionStatement",
                  "src": "1672:14:59"
                }
              ]
            },
            "functionSelector": "961fc416",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 52176,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 52175,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1606:9:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48873,
                  "src": "1606:9:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "1606:9:59"
              }
            ],
            "name": "addClaimHashAndTransit",
            "nameLocation": "1538:22:59",
            "parameters": {
              "id": 52174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52171,
                  "mutability": "mutable",
                  "name": "hashIndex",
                  "nameLocation": "1569:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 52187,
                  "src": "1561:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52173,
                  "mutability": "mutable",
                  "name": "hashValue",
                  "nameLocation": "1588:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 52187,
                  "src": "1580:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1580:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1560:38:59"
            },
            "returnParameters": {
              "id": 52177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1616:0:59"
            },
            "scope": 52308,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52202,
            "nodeType": "FunctionDefinition",
            "src": "1702:144:59",
            "nodes": [],
            "body": {
              "id": 52201,
              "nodeType": "Block",
              "src": "1774:72:59",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52195,
                        "name": "revocationNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52189,
                        "src": "1797:15:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 52194,
                      "name": "revokeClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52252,
                      "src": "1785:11:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64)"
                      }
                    },
                    "id": 52196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1785:28:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52197,
                  "nodeType": "ExpressionStatement",
                  "src": "1785:28:59"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 52198,
                      "name": "transitState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52264,
                      "src": "1824:12:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 52199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1824:14:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52200,
                  "nodeType": "ExpressionStatement",
                  "src": "1824:14:59"
                }
              ]
            },
            "functionSelector": "f2a8ed5a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 52192,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 52191,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1764:9:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48873,
                  "src": "1764:9:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "1764:9:59"
              }
            ],
            "name": "revokeClaimAndTransit",
            "nameLocation": "1711:21:59",
            "parameters": {
              "id": 52190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52189,
                  "mutability": "mutable",
                  "name": "revocationNonce",
                  "nameLocation": "1740:15:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 52202,
                  "src": "1733:22:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 52188,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1733:6:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1732:24:59"
            },
            "returnParameters": {
              "id": 52193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1774:0:59"
            },
            "scope": 52308,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52219,
            "nodeType": "FunctionDefinition",
            "src": "1929:113:59",
            "nodes": [],
            "body": {
              "id": 52218,
              "nodeType": "Block",
              "src": "1999:43:59",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52215,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52207,
                        "src": "2028:5:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                          "typeString": "uint256[8] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                          "typeString": "uint256[8] calldata"
                        }
                      ],
                      "expression": {
                        "id": 52212,
                        "name": "identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1982,
                        "src": "2010:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$2376_storage",
                          "typeString": "struct IdentityLib.Data storage ref"
                        }
                      },
                      "id": 52214,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2019:8:59",
                      "memberName": "addClaim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2554,
                      "src": "2010:17:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Data_$2376_storage_ptr_$_t_array$_t_uint256_$8_memory_ptr_$returns$__$attached_to$_t_struct$_Data_$2376_storage_ptr_$",
                        "typeString": "function (struct IdentityLib.Data storage pointer,uint256[8] memory)"
                      }
                    },
                    "id": 52216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2010:24:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52217,
                  "nodeType": "ExpressionStatement",
                  "src": "2010:24:59"
                }
              ]
            },
            "documentation": {
              "id": 52203,
              "nodeType": "StructuredDocumentation",
              "src": "1854:69:59",
              "text": " @dev Add claim\n @param claim - claim data"
            },
            "functionSelector": "5aa7396b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 52210,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 52209,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1989:9:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48873,
                  "src": "1989:9:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "1989:9:59"
              }
            ],
            "name": "addClaim",
            "nameLocation": "1938:8:59",
            "parameters": {
              "id": 52208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52207,
                  "mutability": "mutable",
                  "name": "claim",
                  "nameLocation": "1967:5:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 52219,
                  "src": "1947:25:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                    "typeString": "uint256[8]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 52204,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1947:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 52206,
                    "length": {
                      "hexValue": "38",
                      "id": 52205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1955:1:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8_by_1",
                        "typeString": "int_const 8"
                      },
                      "value": "8"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1947:10:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$8_storage_ptr",
                      "typeString": "uint256[8]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1946:27:59"
            },
            "returnParameters": {
              "id": 52211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1999:0:59"
            },
            "scope": 52308,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 52237,
            "nodeType": "FunctionDefinition",
            "src": "2200:147:59",
            "nodes": [],
            "body": {
              "id": 52236,
              "nodeType": "Block",
              "src": "2285:62:59",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52232,
                        "name": "hashIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52222,
                        "src": "2318:9:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 52233,
                        "name": "hashValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52224,
                        "src": "2329:9:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 52229,
                        "name": "identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1982,
                        "src": "2296:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$2376_storage",
                          "typeString": "struct IdentityLib.Data storage ref"
                        }
                      },
                      "id": 52231,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2305:12:59",
                      "memberName": "addClaimHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2577,
                      "src": "2296:21:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Data_$2376_storage_ptr_$_t_uint256_$_t_uint256_$returns$__$attached_to$_t_struct$_Data_$2376_storage_ptr_$",
                        "typeString": "function (struct IdentityLib.Data storage pointer,uint256,uint256)"
                      }
                    },
                    "id": 52234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2296:43:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52235,
                  "nodeType": "ExpressionStatement",
                  "src": "2296:43:59"
                }
              ]
            },
            "documentation": {
              "id": 52220,
              "nodeType": "StructuredDocumentation",
              "src": "2050:144:59",
              "text": " @dev Add claim hash\n @param hashIndex - hash of claim index part\n @param hashValue - hash of claim value part"
            },
            "functionSelector": "5584b091",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 52227,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 52226,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2275:9:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48873,
                  "src": "2275:9:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "2275:9:59"
              }
            ],
            "name": "addClaimHash",
            "nameLocation": "2209:12:59",
            "parameters": {
              "id": 52225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52222,
                  "mutability": "mutable",
                  "name": "hashIndex",
                  "nameLocation": "2230:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 52237,
                  "src": "2222:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52221,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2222:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52224,
                  "mutability": "mutable",
                  "name": "hashValue",
                  "nameLocation": "2249:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 52237,
                  "src": "2241:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2241:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2221:38:59"
            },
            "returnParameters": {
              "id": 52228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2285:0:59"
            },
            "scope": 52308,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 52252,
            "nodeType": "FunctionDefinition",
            "src": "2476:126:59",
            "nodes": [],
            "body": {
              "id": 52251,
              "nodeType": "Block",
              "src": "2546:56:59",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52248,
                        "name": "revocationNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52240,
                        "src": "2578:15:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "id": 52245,
                        "name": "identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1982,
                        "src": "2557:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$2376_storage",
                          "typeString": "struct IdentityLib.Data storage ref"
                        }
                      },
                      "id": 52247,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2566:11:59",
                      "memberName": "revokeClaim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2601,
                      "src": "2557:20:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Data_$2376_storage_ptr_$_t_uint64_$returns$__$attached_to$_t_struct$_Data_$2376_storage_ptr_$",
                        "typeString": "function (struct IdentityLib.Data storage pointer,uint64)"
                      }
                    },
                    "id": 52249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2557:37:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52250,
                  "nodeType": "ExpressionStatement",
                  "src": "2557:37:59"
                }
              ]
            },
            "documentation": {
              "id": 52238,
              "nodeType": "StructuredDocumentation",
              "src": "2355:115:59",
              "text": " @dev Revoke claim using it's revocationNonce\n @param revocationNonce - revocation nonce"
            },
            "functionSelector": "891eb608",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 52243,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 52242,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2536:9:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48873,
                  "src": "2536:9:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "2536:9:59"
              }
            ],
            "name": "revokeClaim",
            "nameLocation": "2485:11:59",
            "parameters": {
              "id": 52241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52240,
                  "mutability": "mutable",
                  "name": "revocationNonce",
                  "nameLocation": "2504:15:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 52252,
                  "src": "2497:22:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 52239,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2497:6:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2496:24:59"
            },
            "returnParameters": {
              "id": 52244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2546:0:59"
            },
            "scope": 52308,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 52264,
            "nodeType": "FunctionDefinition",
            "src": "2663:91:59",
            "nodes": [],
            "body": {
              "id": 52263,
              "nodeType": "Block",
              "src": "2712:42:59",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 52258,
                        "name": "identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1982,
                        "src": "2723:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$2376_storage",
                          "typeString": "struct IdentityLib.Data storage ref"
                        }
                      },
                      "id": 52260,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2732:12:59",
                      "memberName": "transitState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2765,
                      "src": "2723:21:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Data_$2376_storage_ptr_$returns$__$attached_to$_t_struct$_Data_$2376_storage_ptr_$",
                        "typeString": "function (struct IdentityLib.Data storage pointer)"
                      }
                    },
                    "id": 52261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2723:23:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52262,
                  "nodeType": "ExpressionStatement",
                  "src": "2723:23:59"
                }
              ]
            },
            "documentation": {
              "id": 52253,
              "nodeType": "StructuredDocumentation",
              "src": "2610:47:59",
              "text": " @dev Make state transition"
            },
            "functionSelector": "6c87e2fa",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 52256,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 52255,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2702:9:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48873,
                  "src": "2702:9:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "2702:9:59"
              }
            ],
            "name": "transitState",
            "nameLocation": "2672:12:59",
            "parameters": {
              "id": 52254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2684:2:59"
            },
            "returnParameters": {
              "id": 52257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2712:0:59"
            },
            "scope": 52308,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 52275,
            "nodeType": "FunctionDefinition",
            "src": "2847:121:59",
            "nodes": [],
            "body": {
              "id": 52274,
              "nodeType": "Block",
              "src": "2914:54:59",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 52270,
                        "name": "identity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1982,
                        "src": "2932:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$2376_storage",
                          "typeString": "struct IdentityLib.Data storage ref"
                        }
                      },
                      "id": 52271,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2941:17:59",
                      "memberName": "calcIdentityState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2795,
                      "src": "2932:26:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_Data_$2376_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Data_$2376_storage_ptr_$",
                        "typeString": "function (struct IdentityLib.Data storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 52272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2932:28:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 52269,
                  "id": 52273,
                  "nodeType": "Return",
                  "src": "2925:35:59"
                }
              ]
            },
            "documentation": {
              "id": 52265,
              "nodeType": "StructuredDocumentation",
              "src": "2762:79:59",
              "text": " @dev Calculate IdentityState\n @return IdentityState"
            },
            "functionSelector": "4ddad0b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calcIdentityState",
            "nameLocation": "2856:17:59",
            "parameters": {
              "id": 52266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2873:2:59"
            },
            "returnParameters": {
              "id": 52269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52268,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 52275,
                  "src": "2905:7:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52267,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2905:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2904:9:59"
            },
            "scope": 52308,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 52290,
            "nodeType": "FunctionDefinition",
            "src": "2976:169:59",
            "nodes": [],
            "body": {
              "id": 52289,
              "nodeType": "Block",
              "src": "3060:85:59",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    52285
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52285,
                      "mutability": "mutable",
                      "name": "claimData",
                      "nameLocation": "3101:9:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 52289,
                      "src": "3071:39:59",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ClaimData_$1414_memory_ptr",
                        "typeString": "struct ClaimBuilder.ClaimData"
                      },
                      "typeName": {
                        "id": 52284,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 52283,
                          "name": "ClaimBuilder.ClaimData",
                          "nameLocations": [
                            "3071:12:59",
                            "3084:9:59"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1414,
                          "src": "3071:22:59"
                        },
                        "referencedDeclaration": 1414,
                        "src": "3071:22:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimData_$1414_storage_ptr",
                          "typeString": "struct ClaimBuilder.ClaimData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52286,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3071:39:59"
                },
                {
                  "expression": {
                    "id": 52287,
                    "name": "claimData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 52285,
                    "src": "3128:9:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimData_$1414_memory_ptr",
                      "typeString": "struct ClaimBuilder.ClaimData memory"
                    }
                  },
                  "functionReturnParameters": 52280,
                  "id": 52288,
                  "nodeType": "Return",
                  "src": "3121:16:59"
                }
              ]
            },
            "functionSelector": "5b9c895d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newClaimData",
            "nameLocation": "2985:12:59",
            "parameters": {
              "id": 52276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2997:2:59"
            },
            "returnParameters": {
              "id": 52280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52279,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 52290,
                  "src": "3029:29:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ClaimData_$1414_memory_ptr",
                    "typeString": "struct ClaimBuilder.ClaimData"
                  },
                  "typeName": {
                    "id": 52278,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 52277,
                      "name": "ClaimBuilder.ClaimData",
                      "nameLocations": [
                        "3029:12:59",
                        "3042:9:59"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1414,
                      "src": "3029:22:59"
                    },
                    "referencedDeclaration": 1414,
                    "src": "3029:22:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimData_$1414_storage_ptr",
                      "typeString": "struct ClaimBuilder.ClaimData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3028:31:59"
            },
            "scope": 52308,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 52307,
            "nodeType": "FunctionDefinition",
            "src": "3264:182:59",
            "nodes": [],
            "body": {
              "id": 52306,
              "nodeType": "Block",
              "src": "3391:55:59",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52303,
                        "name": "claimData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52294,
                        "src": "3428:9:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimData_$1414_calldata_ptr",
                          "typeString": "struct ClaimBuilder.ClaimData calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ClaimData_$1414_calldata_ptr",
                          "typeString": "struct ClaimBuilder.ClaimData calldata"
                        }
                      ],
                      "expression": {
                        "id": 52301,
                        "name": "ClaimBuilder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1756,
                        "src": "3409:12:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ClaimBuilder_$1756_$",
                          "typeString": "type(library ClaimBuilder)"
                        }
                      },
                      "id": 52302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3422:5:59",
                      "memberName": "build",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1755,
                      "src": "3409:18:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_struct$_ClaimData_$1414_memory_ptr_$returns$_t_array$_t_uint256_$8_memory_ptr_$",
                        "typeString": "function (struct ClaimBuilder.ClaimData memory) pure returns (uint256[8] memory)"
                      }
                    },
                    "id": 52304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3409:29:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$8_memory_ptr",
                      "typeString": "uint256[8] memory"
                    }
                  },
                  "functionReturnParameters": 52300,
                  "id": 52305,
                  "nodeType": "Return",
                  "src": "3402:36:59"
                }
              ]
            },
            "documentation": {
              "id": 52291,
              "nodeType": "StructuredDocumentation",
              "src": "3153:105:59",
              "text": " @dev Builds claim\n @param claimData - claim data\n @return binary claim"
            },
            "functionSelector": "73c08244",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buildClaim",
            "nameLocation": "3273:10:59",
            "parameters": {
              "id": 52295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52294,
                  "mutability": "mutable",
                  "name": "claimData",
                  "nameLocation": "3326:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 52307,
                  "src": "3294:41:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ClaimData_$1414_calldata_ptr",
                    "typeString": "struct ClaimBuilder.ClaimData"
                  },
                  "typeName": {
                    "id": 52293,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 52292,
                      "name": "ClaimBuilder.ClaimData",
                      "nameLocations": [
                        "3294:12:59",
                        "3307:9:59"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1414,
                      "src": "3294:22:59"
                    },
                    "referencedDeclaration": 1414,
                    "src": "3294:22:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimData_$1414_storage_ptr",
                      "typeString": "struct ClaimBuilder.ClaimData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3283:59:59"
            },
            "returnParameters": {
              "id": 52300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52299,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 52307,
                  "src": "3372:17:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$8_memory_ptr",
                    "typeString": "uint256[8]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 52296,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3372:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 52298,
                    "length": {
                      "hexValue": "38",
                      "id": 52297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3380:1:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8_by_1",
                        "typeString": "int_const 8"
                      },
                      "value": "8"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3372:10:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$8_storage_ptr",
                      "typeString": "uint256[8]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3371:19:59"
            },
            "scope": 52308,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 52121,
              "name": "IdentityBase",
              "nameLocations": [
                "526:12:59"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2332,
              "src": "526:12:59"
            },
            "id": 52122,
            "nodeType": "InheritanceSpecifier",
            "src": "526:12:59"
          },
          {
            "baseName": {
              "id": 52123,
              "name": "OwnableUpgradeable",
              "nameLocations": [
                "540:18:59"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48978,
              "src": "540:18:59"
            },
            "id": 52124,
            "nodeType": "InheritanceSpecifier",
            "src": "540:18:59"
          }
        ],
        "canonicalName": "IdentityExample",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          52308,
          48978,
          49270,
          49232,
          2332,
          1106
        ],
        "name": "IdentityExample",
        "nameLocation": "507:15:59",
        "scope": 52309,
        "usedErrors": [
          48814,
          48819,
          48995,
          48998
        ],
        "usedEvents": [
          48825,
          49003
        ]
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 59
}